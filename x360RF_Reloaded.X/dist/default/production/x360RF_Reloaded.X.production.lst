

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Sat Oct 19 12:27:15 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	16F1825
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	clrtext,global,class=CODE,delta=2
     8                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,merge=1,delta=2
    14                           	psect	text3,local,class=CODE,merge=1,delta=2
    15                           	psect	intentry,global,class=CODE,delta=2
    16                           	dabs	1,0x7E,2
    17  0000                     
    18                           ; Version 2.05
    19                           ; Generated 20/12/2018 GMT
    20                           ; 
    21                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    22                           ; All rights reserved.
    23                           ; 
    24                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    25                           ; 
    26                           ; Redistribution and use in source and binary forms, with or without modification, are
    27                           ; permitted provided that the following conditions are met:
    28                           ; 
    29                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    30                           ;        conditions and the following disclaimer.
    31                           ; 
    32                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    33                           ;        of conditions and the following disclaimer in the documentation and/or other
    34                           ;        materials provided with the distribution.
    35                           ; 
    36                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    37                           ;        software without specific prior written permission.
    38                           ; 
    39                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    40                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    41                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    42                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    43                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    44                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    45                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    46                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    47                           ; 
    48                           ; 
    49                           ; Code-generator required, PIC16F1825 Definitions
    50                           ; 
    51                           ; SFR Addresses
    52  0000                     	;# 
    53  0001                     	;# 
    54  0002                     	;# 
    55  0003                     	;# 
    56  0004                     	;# 
    57  0005                     	;# 
    58  0006                     	;# 
    59  0007                     	;# 
    60  0008                     	;# 
    61  0009                     	;# 
    62  000A                     	;# 
    63  000B                     	;# 
    64  000C                     	;# 
    65  000E                     	;# 
    66  0011                     	;# 
    67  0012                     	;# 
    68  0013                     	;# 
    69  0015                     	;# 
    70  0016                     	;# 
    71  0016                     	;# 
    72  0017                     	;# 
    73  0018                     	;# 
    74  0019                     	;# 
    75  001A                     	;# 
    76  001B                     	;# 
    77  001C                     	;# 
    78  001E                     	;# 
    79  001F                     	;# 
    80  008C                     	;# 
    81  008E                     	;# 
    82  0091                     	;# 
    83  0092                     	;# 
    84  0093                     	;# 
    85  0095                     	;# 
    86  0096                     	;# 
    87  0097                     	;# 
    88  0098                     	;# 
    89  0099                     	;# 
    90  009A                     	;# 
    91  009B                     	;# 
    92  009B                     	;# 
    93  009C                     	;# 
    94  009D                     	;# 
    95  009E                     	;# 
    96  010C                     	;# 
    97  010E                     	;# 
    98  0111                     	;# 
    99  0112                     	;# 
   100  0113                     	;# 
   101  0114                     	;# 
   102  0115                     	;# 
   103  0116                     	;# 
   104  0117                     	;# 
   105  0118                     	;# 
   106  0119                     	;# 
   107  011A                     	;# 
   108  011B                     	;# 
   109  011D                     	;# 
   110  011E                     	;# 
   111  018C                     	;# 
   112  018E                     	;# 
   113  0191                     	;# 
   114  0191                     	;# 
   115  0192                     	;# 
   116  0193                     	;# 
   117  0193                     	;# 
   118  0193                     	;# 
   119  0194                     	;# 
   120  0195                     	;# 
   121  0196                     	;# 
   122  0199                     	;# 
   123  019A                     	;# 
   124  019B                     	;# 
   125  019B                     	;# 
   126  019C                     	;# 
   127  019D                     	;# 
   128  019E                     	;# 
   129  019F                     	;# 
   130  020C                     	;# 
   131  020E                     	;# 
   132  0211                     	;# 
   133  0211                     	;# 
   134  0212                     	;# 
   135  0212                     	;# 
   136  0213                     	;# 
   137  0213                     	;# 
   138  0214                     	;# 
   139  0214                     	;# 
   140  0215                     	;# 
   141  0215                     	;# 
   142  0215                     	;# 
   143  0216                     	;# 
   144  0216                     	;# 
   145  0217                     	;# 
   146  0217                     	;# 
   147  0291                     	;# 
   148  0291                     	;# 
   149  0292                     	;# 
   150  0293                     	;# 
   151  0294                     	;# 
   152  0295                     	;# 
   153  0295                     	;# 
   154  0296                     	;# 
   155  0298                     	;# 
   156  0298                     	;# 
   157  0299                     	;# 
   158  029A                     	;# 
   159  029B                     	;# 
   160  029C                     	;# 
   161  029D                     	;# 
   162  029E                     	;# 
   163  0311                     	;# 
   164  0311                     	;# 
   165  0312                     	;# 
   166  0313                     	;# 
   167  0318                     	;# 
   168  0318                     	;# 
   169  0319                     	;# 
   170  031A                     	;# 
   171  038C                     	;# 
   172  038E                     	;# 
   173  0391                     	;# 
   174  0392                     	;# 
   175  0393                     	;# 
   176  039A                     	;# 
   177  039C                     	;# 
   178  039D                     	;# 
   179  039E                     	;# 
   180  039F                     	;# 
   181  0415                     	;# 
   182  0416                     	;# 
   183  0417                     	;# 
   184  041C                     	;# 
   185  041D                     	;# 
   186  041E                     	;# 
   187  0FE4                     	;# 
   188  0FE5                     	;# 
   189  0FE6                     	;# 
   190  0FE7                     	;# 
   191  0FE8                     	;# 
   192  0FE9                     	;# 
   193  0FEA                     	;# 
   194  0FEB                     	;# 
   195  0FED                     	;# 
   196  0FEE                     	;# 
   197  0FEF                     	;# 
   198  0000                     	;# 
   199  0001                     	;# 
   200  0002                     	;# 
   201  0003                     	;# 
   202  0004                     	;# 
   203  0005                     	;# 
   204  0006                     	;# 
   205  0007                     	;# 
   206  0008                     	;# 
   207  0009                     	;# 
   208  000A                     	;# 
   209  000B                     	;# 
   210  000C                     	;# 
   211  000E                     	;# 
   212  0011                     	;# 
   213  0012                     	;# 
   214  0013                     	;# 
   215  0015                     	;# 
   216  0016                     	;# 
   217  0016                     	;# 
   218  0017                     	;# 
   219  0018                     	;# 
   220  0019                     	;# 
   221  001A                     	;# 
   222  001B                     	;# 
   223  001C                     	;# 
   224  001E                     	;# 
   225  001F                     	;# 
   226  008C                     	;# 
   227  008E                     	;# 
   228  0091                     	;# 
   229  0092                     	;# 
   230  0093                     	;# 
   231  0095                     	;# 
   232  0096                     	;# 
   233  0097                     	;# 
   234  0098                     	;# 
   235  0099                     	;# 
   236  009A                     	;# 
   237  009B                     	;# 
   238  009B                     	;# 
   239  009C                     	;# 
   240  009D                     	;# 
   241  009E                     	;# 
   242  010C                     	;# 
   243  010E                     	;# 
   244  0111                     	;# 
   245  0112                     	;# 
   246  0113                     	;# 
   247  0114                     	;# 
   248  0115                     	;# 
   249  0116                     	;# 
   250  0117                     	;# 
   251  0118                     	;# 
   252  0119                     	;# 
   253  011A                     	;# 
   254  011B                     	;# 
   255  011D                     	;# 
   256  011E                     	;# 
   257  018C                     	;# 
   258  018E                     	;# 
   259  0191                     	;# 
   260  0191                     	;# 
   261  0192                     	;# 
   262  0193                     	;# 
   263  0193                     	;# 
   264  0193                     	;# 
   265  0194                     	;# 
   266  0195                     	;# 
   267  0196                     	;# 
   268  0199                     	;# 
   269  019A                     	;# 
   270  019B                     	;# 
   271  019B                     	;# 
   272  019C                     	;# 
   273  019D                     	;# 
   274  019E                     	;# 
   275  019F                     	;# 
   276  020C                     	;# 
   277  020E                     	;# 
   278  0211                     	;# 
   279  0211                     	;# 
   280  0212                     	;# 
   281  0212                     	;# 
   282  0213                     	;# 
   283  0213                     	;# 
   284  0214                     	;# 
   285  0214                     	;# 
   286  0215                     	;# 
   287  0215                     	;# 
   288  0215                     	;# 
   289  0216                     	;# 
   290  0216                     	;# 
   291  0217                     	;# 
   292  0217                     	;# 
   293  0291                     	;# 
   294  0291                     	;# 
   295  0292                     	;# 
   296  0293                     	;# 
   297  0294                     	;# 
   298  0295                     	;# 
   299  0295                     	;# 
   300  0296                     	;# 
   301  0298                     	;# 
   302  0298                     	;# 
   303  0299                     	;# 
   304  029A                     	;# 
   305  029B                     	;# 
   306  029C                     	;# 
   307  029D                     	;# 
   308  029E                     	;# 
   309  0311                     	;# 
   310  0311                     	;# 
   311  0312                     	;# 
   312  0313                     	;# 
   313  0318                     	;# 
   314  0318                     	;# 
   315  0319                     	;# 
   316  031A                     	;# 
   317  038C                     	;# 
   318  038E                     	;# 
   319  0391                     	;# 
   320  0392                     	;# 
   321  0393                     	;# 
   322  039A                     	;# 
   323  039C                     	;# 
   324  039D                     	;# 
   325  039E                     	;# 
   326  039F                     	;# 
   327  0415                     	;# 
   328  0416                     	;# 
   329  0417                     	;# 
   330  041C                     	;# 
   331  041D                     	;# 
   332  041E                     	;# 
   333  0FE4                     	;# 
   334  0FE5                     	;# 
   335  0FE6                     	;# 
   336  0FE7                     	;# 
   337  0FE8                     	;# 
   338  0FE9                     	;# 
   339  0FEA                     	;# 
   340  0FEB                     	;# 
   341  0FED                     	;# 
   342  0FEE                     	;# 
   343  0FEF                     	;# 
   344  0000                     	;# 
   345  0001                     	;# 
   346  0002                     	;# 
   347  0003                     	;# 
   348  0004                     	;# 
   349  0005                     	;# 
   350  0006                     	;# 
   351  0007                     	;# 
   352  0008                     	;# 
   353  0009                     	;# 
   354  000A                     	;# 
   355  000B                     	;# 
   356  000C                     	;# 
   357  000E                     	;# 
   358  0011                     	;# 
   359  0012                     	;# 
   360  0013                     	;# 
   361  0015                     	;# 
   362  0016                     	;# 
   363  0016                     	;# 
   364  0017                     	;# 
   365  0018                     	;# 
   366  0019                     	;# 
   367  001A                     	;# 
   368  001B                     	;# 
   369  001C                     	;# 
   370  001E                     	;# 
   371  001F                     	;# 
   372  008C                     	;# 
   373  008E                     	;# 
   374  0091                     	;# 
   375  0092                     	;# 
   376  0093                     	;# 
   377  0095                     	;# 
   378  0096                     	;# 
   379  0097                     	;# 
   380  0098                     	;# 
   381  0099                     	;# 
   382  009A                     	;# 
   383  009B                     	;# 
   384  009B                     	;# 
   385  009C                     	;# 
   386  009D                     	;# 
   387  009E                     	;# 
   388  010C                     	;# 
   389  010E                     	;# 
   390  0111                     	;# 
   391  0112                     	;# 
   392  0113                     	;# 
   393  0114                     	;# 
   394  0115                     	;# 
   395  0116                     	;# 
   396  0117                     	;# 
   397  0118                     	;# 
   398  0119                     	;# 
   399  011A                     	;# 
   400  011B                     	;# 
   401  011D                     	;# 
   402  011E                     	;# 
   403  018C                     	;# 
   404  018E                     	;# 
   405  0191                     	;# 
   406  0191                     	;# 
   407  0192                     	;# 
   408  0193                     	;# 
   409  0193                     	;# 
   410  0193                     	;# 
   411  0194                     	;# 
   412  0195                     	;# 
   413  0196                     	;# 
   414  0199                     	;# 
   415  019A                     	;# 
   416  019B                     	;# 
   417  019B                     	;# 
   418  019C                     	;# 
   419  019D                     	;# 
   420  019E                     	;# 
   421  019F                     	;# 
   422  020C                     	;# 
   423  020E                     	;# 
   424  0211                     	;# 
   425  0211                     	;# 
   426  0212                     	;# 
   427  0212                     	;# 
   428  0213                     	;# 
   429  0213                     	;# 
   430  0214                     	;# 
   431  0214                     	;# 
   432  0215                     	;# 
   433  0215                     	;# 
   434  0215                     	;# 
   435  0216                     	;# 
   436  0216                     	;# 
   437  0217                     	;# 
   438  0217                     	;# 
   439  0291                     	;# 
   440  0291                     	;# 
   441  0292                     	;# 
   442  0293                     	;# 
   443  0294                     	;# 
   444  0295                     	;# 
   445  0295                     	;# 
   446  0296                     	;# 
   447  0298                     	;# 
   448  0298                     	;# 
   449  0299                     	;# 
   450  029A                     	;# 
   451  029B                     	;# 
   452  029C                     	;# 
   453  029D                     	;# 
   454  029E                     	;# 
   455  0311                     	;# 
   456  0311                     	;# 
   457  0312                     	;# 
   458  0313                     	;# 
   459  0318                     	;# 
   460  0318                     	;# 
   461  0319                     	;# 
   462  031A                     	;# 
   463  038C                     	;# 
   464  038E                     	;# 
   465  0391                     	;# 
   466  0392                     	;# 
   467  0393                     	;# 
   468  039A                     	;# 
   469  039C                     	;# 
   470  039D                     	;# 
   471  039E                     	;# 
   472  039F                     	;# 
   473  0415                     	;# 
   474  0416                     	;# 
   475  0417                     	;# 
   476  041C                     	;# 
   477  041D                     	;# 
   478  041E                     	;# 
   479  0FE4                     	;# 
   480  0FE5                     	;# 
   481  0FE6                     	;# 
   482  0FE7                     	;# 
   483  0FE8                     	;# 
   484  0FE9                     	;# 
   485  0FEA                     	;# 
   486  0FEB                     	;# 
   487  0FED                     	;# 
   488  0FEE                     	;# 
   489  0FEF                     	;# 
   490  0000                     	;# 
   491  0001                     	;# 
   492  0002                     	;# 
   493  0003                     	;# 
   494  0004                     	;# 
   495  0005                     	;# 
   496  0006                     	;# 
   497  0007                     	;# 
   498  0008                     	;# 
   499  0009                     	;# 
   500  000A                     	;# 
   501  000B                     	;# 
   502  000C                     	;# 
   503  000E                     	;# 
   504  0011                     	;# 
   505  0012                     	;# 
   506  0013                     	;# 
   507  0015                     	;# 
   508  0016                     	;# 
   509  0016                     	;# 
   510  0017                     	;# 
   511  0018                     	;# 
   512  0019                     	;# 
   513  001A                     	;# 
   514  001B                     	;# 
   515  001C                     	;# 
   516  001E                     	;# 
   517  001F                     	;# 
   518  008C                     	;# 
   519  008E                     	;# 
   520  0091                     	;# 
   521  0092                     	;# 
   522  0093                     	;# 
   523  0095                     	;# 
   524  0096                     	;# 
   525  0097                     	;# 
   526  0098                     	;# 
   527  0099                     	;# 
   528  009A                     	;# 
   529  009B                     	;# 
   530  009B                     	;# 
   531  009C                     	;# 
   532  009D                     	;# 
   533  009E                     	;# 
   534  010C                     	;# 
   535  010E                     	;# 
   536  0111                     	;# 
   537  0112                     	;# 
   538  0113                     	;# 
   539  0114                     	;# 
   540  0115                     	;# 
   541  0116                     	;# 
   542  0117                     	;# 
   543  0118                     	;# 
   544  0119                     	;# 
   545  011A                     	;# 
   546  011B                     	;# 
   547  011D                     	;# 
   548  011E                     	;# 
   549  018C                     	;# 
   550  018E                     	;# 
   551  0191                     	;# 
   552  0191                     	;# 
   553  0192                     	;# 
   554  0193                     	;# 
   555  0193                     	;# 
   556  0193                     	;# 
   557  0194                     	;# 
   558  0195                     	;# 
   559  0196                     	;# 
   560  0199                     	;# 
   561  019A                     	;# 
   562  019B                     	;# 
   563  019B                     	;# 
   564  019C                     	;# 
   565  019D                     	;# 
   566  019E                     	;# 
   567  019F                     	;# 
   568  020C                     	;# 
   569  020E                     	;# 
   570  0211                     	;# 
   571  0211                     	;# 
   572  0212                     	;# 
   573  0212                     	;# 
   574  0213                     	;# 
   575  0213                     	;# 
   576  0214                     	;# 
   577  0214                     	;# 
   578  0215                     	;# 
   579  0215                     	;# 
   580  0215                     	;# 
   581  0216                     	;# 
   582  0216                     	;# 
   583  0217                     	;# 
   584  0217                     	;# 
   585  0291                     	;# 
   586  0291                     	;# 
   587  0292                     	;# 
   588  0293                     	;# 
   589  0294                     	;# 
   590  0295                     	;# 
   591  0295                     	;# 
   592  0296                     	;# 
   593  0298                     	;# 
   594  0298                     	;# 
   595  0299                     	;# 
   596  029A                     	;# 
   597  029B                     	;# 
   598  029C                     	;# 
   599  029D                     	;# 
   600  029E                     	;# 
   601  0311                     	;# 
   602  0311                     	;# 
   603  0312                     	;# 
   604  0313                     	;# 
   605  0318                     	;# 
   606  0318                     	;# 
   607  0319                     	;# 
   608  031A                     	;# 
   609  038C                     	;# 
   610  038E                     	;# 
   611  0391                     	;# 
   612  0392                     	;# 
   613  0393                     	;# 
   614  039A                     	;# 
   615  039C                     	;# 
   616  039D                     	;# 
   617  039E                     	;# 
   618  039F                     	;# 
   619  0415                     	;# 
   620  0416                     	;# 
   621  0417                     	;# 
   622  041C                     	;# 
   623  041D                     	;# 
   624  041E                     	;# 
   625  0FE4                     	;# 
   626  0FE5                     	;# 
   627  0FE6                     	;# 
   628  0FE7                     	;# 
   629  0FE8                     	;# 
   630  0FE9                     	;# 
   631  0FEA                     	;# 
   632  0FEB                     	;# 
   633  0FED                     	;# 
   634  0FEE                     	;# 
   635  0FEF                     	;# 
   636  0011                     _PIR1bits	set	17
   637  000E                     _PORTC	set	14
   638  000C                     _PORTA	set	12
   639  000E                     _PORTCbits	set	14
   640  000B                     _INTCONbits	set	11
   641  005E                     _PEIE	set	94
   642  008D                     _RCIF	set	141
   643  0091                     _PIE1bits	set	145
   644  008C                     _TRISAbits	set	140
   645  0095                     _OPTION_REGbits	set	149
   646  008E                     _TRISC	set	142
   647  008C                     _TRISA	set	140
   648  0099                     _OSCCONbits	set	153
   649  008E                     _TRISCbits	set	142
   650  011D                     _APFCON0bits	set	285
   651  010E                     _LATC	set	270
   652  010C                     _LATA	set	268
   653  010E                     _LATCbits	set	270
   654  019B                     _SPBRG	set	411
   655  019D                     _RCSTAbits	set	413
   656  019F                     _BAUDCONbits	set	415
   657  019E                     _TXSTAbits	set	414
   658  018E                     _ANSELC	set	398
   659  018C                     _ANSELA	set	396
   660  019A                     _TXREG	set	410
   661  0199                     _RCREG	set	409
   662  020C                     _WPUAbits	set	524
   663                           
   664                           ; #config settings
   665  0000                     
   666                           	psect	cinit
   667  001A                     start_initialization:	
   668  001A                     __initialization:	
   669                           
   670                           ; Clear objects allocated to COMMON
   671  001A  01F9               	clrf	__pbssCOMMON& (0+127)
   672                           
   673                           ; Clear objects allocated to BANK0
   674  001B  3020               	movlw	low __pbssBANK0
   675  001C  0084               	movwf	4
   676  001D  3000               	movlw	high __pbssBANK0
   677  001E  0085               	movwf	5
   678  001F  3049               	movlw	73
   679  0020  3181  219A         	fcall	clear_ram0
   680  0022                     end_of_initialization:	
   681                           ;End of C runtime variable initialization code
   682                           
   683  0022                     __end_of__initialization:	
   684  0022  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
   685  0023  0020               	movlb	0
   686  0024  3180  2826         	ljmp	_main	;jump to C main() function
   687                           
   688                           	psect	bssCOMMON
   689  0079                     __pbssCOMMON:	
   690  0079                     _rx_ser:	
   691  0079                     	ds	1
   692                           
   693                           	psect	bssBANK0
   694  0020                     __pbssBANK0:	
   695  0020                     _URBuff:	
   696  0020                     	ds	64
   697  0060                     USARTWriteInt@F2384:	
   698  0060                     	ds	5
   699  0065                     _clk_low:	
   700  0065                     	ds	2
   701  0067                     _UQEnd:	
   702  0067                     	ds	1
   703  0068                     _UQFront:	
   704  0068                     	ds	1
   705                           
   706                           	psect	clrtext
   707  019A                     clear_ram0:	
   708                           ;	Called with FSR0 containing the base address, and
   709                           ;	WREG with the size to clear
   710                           
   711  019A  0064               	clrwdt	;clear the watchdog before getting into this loop
   712  019B                     clrloop0:	
   713  019B  0180               	clrf	0	;clear RAM location pointed to by FSR
   714  019C  3101               	addfsr 0,1
   715  019D  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
   716  019E  299B               	goto	clrloop0	;have we reached the end yet?
   717  019F  3400               	retlw	0	;all done for this memory range, return
   718                           
   719                           	psect	cstackBANK1
   720  00A0                     __pcstackBANK1:	
   721  00A0                     ??_main:	
   722                           
   723                           ; 1 bytes @ 0x0
   724  00A0                     	ds	4
   725                           
   726                           	psect	cstackCOMMON
   727  0070                     __pcstackCOMMON:	
   728  0070                     ?_config:	
   729  0070                     ?_int0:	
   730                           ; 1 bytes @ 0x0
   731                           
   732  0070                     ??_int0:	
   733                           ; 1 bytes @ 0x0
   734                           
   735  0070                     ?_main:	
   736                           ; 1 bytes @ 0x0
   737                           
   738                           
   739                           ; 1 bytes @ 0x0
   740  0070                     	ds	1
   741  0071                     ?_USARTInit:	
   742  0071                     ?_send_data:	
   743                           ; 1 bytes @ 0x1
   744                           
   745  0071                     USARTInit@baud_rate:	
   746                           ; 1 bytes @ 0x1
   747                           
   748  0071                     send_data@data:	
   749                           ; 2 bytes @ 0x1
   750                           
   751                           
   752                           ; 4 bytes @ 0x1
   753  0071                     	ds	2
   754  0073                     ??_USARTInit:	
   755                           
   756                           ; 1 bytes @ 0x3
   757  0073                     	ds	1
   758  0074                     ??_config:	
   759                           
   760                           ; 1 bytes @ 0x4
   761  0074                     	ds	1
   762  0075                     ??_send_data:	
   763                           
   764                           ; 1 bytes @ 0x5
   765  0075                     	ds	4
   766                           
   767                           	psect	cstackBANK0
   768  0069                     __pcstackBANK0:	
   769  0069                     send_data@temp:	
   770                           
   771                           ; 4 bytes @ 0x0
   772  0069                     	ds	4
   773  006D                     send_data@i:	
   774                           
   775                           ; 2 bytes @ 0x4
   776  006D                     	ds	2
   777                           
   778                           	psect	maintext
   779  0026                     __pmaintext:	
   780 ;;
   781 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
   782 ;;
   783 ;; *************** function _main *****************
   784 ;; Defined at:
   785 ;;		line 82 in file "main.c"
   786 ;; Parameters:    Size  Location     Type
   787 ;;		None
   788 ;; Auto vars:     Size  Location     Type
   789 ;;		None
   790 ;; Return value:  Size  Location     Type
   791 ;;                  1    wreg      void 
   792 ;; Registers used:
   793 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   794 ;; Tracked objects:
   795 ;;		On entry : B1F/0
   796 ;;		On exit  : 0/0
   797 ;;		Unchanged: 0/0
   798 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   799 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   800 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   801 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
   802 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
   803 ;;Total ram usage:        4 bytes
   804 ;; Hardware stack levels required when called:    3
   805 ;; This function calls:
   806 ;;		_config
   807 ;;		_send_data
   808 ;; This function is called by:
   809 ;;		Startup code after reset
   810 ;; This function uses a non-reentrant model
   811 ;;
   812                           
   813                           
   814                           ;psect for function _main
   815  0026                     _main:	
   816                           
   817                           ;main.c: 84:     config();
   818                           
   819                           ;incstack = 0
   820                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   821  0026  3181  2169  3180   	fcall	_config
   822                           
   823                           ;main.c: 86:     send_data(0x0C0);
   824  0029  3000               	movlw	0
   825  002A  00F4               	movwf	send_data@data+3
   826  002B  3000               	movlw	0
   827  002C  00F3               	movwf	send_data@data+2
   828  002D  3000               	movlw	0
   829  002E  00F2               	movwf	send_data@data+1
   830  002F  30C0               	movlw	192
   831  0030  00F1               	movwf	send_data@data
   832  0031  3180  20B4  3180   	fcall	_send_data
   833                           
   834                           ;main.c: 87:     send_data(0x0B0);
   835  0034  3000               	movlw	0
   836  0035  00F4               	movwf	send_data@data+3
   837  0036  3000               	movlw	0
   838  0037  00F3               	movwf	send_data@data+2
   839  0038  3000               	movlw	0
   840  0039  00F2               	movwf	send_data@data+1
   841  003A  30B0               	movlw	176
   842  003B  00F1               	movwf	send_data@data
   843  003C  3180  20B4  3180   	fcall	_send_data
   844                           
   845                           ;main.c: 88:     send_data(0x0A0);
   846  003F  3000               	movlw	0
   847  0040  00F4               	movwf	send_data@data+3
   848  0041  3000               	movlw	0
   849  0042  00F3               	movwf	send_data@data+2
   850  0043  3000               	movlw	0
   851  0044  00F2               	movwf	send_data@data+1
   852  0045  30A0               	movlw	160
   853  0046  00F1               	movwf	send_data@data
   854  0047  3180  20B4  3180   	fcall	_send_data
   855                           
   856                           ;main.c: 90:     send_data(0x084);
   857  004A  3000               	movlw	0
   858  004B  00F4               	movwf	send_data@data+3
   859  004C  3000               	movlw	0
   860  004D  00F3               	movwf	send_data@data+2
   861  004E  3000               	movlw	0
   862  004F  00F2               	movwf	send_data@data+1
   863  0050  3084               	movlw	132
   864  0051  00F1               	movwf	send_data@data
   865  0052  3180  20B4  3180   	fcall	_send_data
   866                           
   867                           ;main.c: 91:     _delay((unsigned long)((1000)*(8000000/4000.0)));
   868  0055  300B               	movlw	11
   869  0056  0021               	movlb	1	; select bank1
   870  0057  00A1               	movwf	(??_main^(0+128)+1)
   871  0058  3026               	movlw	38
   872  0059  00A0               	movwf	??_main^(0+128)
   873  005A  305D               	movlw	93
   874  005B                     u567:	
   875  005B  0B89               	decfsz	9,f
   876  005C  285B               	goto	u567
   877  005D  0BA0               	decfsz	??_main^(0+128),f
   878  005E  285B               	goto	u567
   879  005F  0BA1               	decfsz	(??_main^(0+128)+1),f
   880  0060  285B               	goto	u567
   881  0061  3200               	nop2
   882                           
   883                           ;main.c: 92:     send_data(0x009);
   884  0062  3000               	movlw	0
   885  0063  00F4               	movwf	send_data@data+3
   886  0064  3000               	movlw	0
   887  0065  00F3               	movwf	send_data@data+2
   888  0066  3000               	movlw	0
   889  0067  00F2               	movwf	send_data@data+1
   890  0068  3009               	movlw	9
   891  0069  00F1               	movwf	send_data@data
   892  006A  3180  20B4  3180   	fcall	_send_data
   893                           
   894                           ;main.c: 93:     _delay((unsigned long)((2000)*(8000000/4000.0)));
   895  006D  3015               	movlw	21
   896  006E  0021               	movlb	1	; select bank1
   897  006F  00A1               	movwf	(??_main^(0+128)+1)
   898  0070  304B               	movlw	75
   899  0071  00A0               	movwf	??_main^(0+128)
   900  0072  30BE               	movlw	190
   901  0073                     u577:	
   902  0073  0B89               	decfsz	9,f
   903  0074  2873               	goto	u577
   904  0075  0BA0               	decfsz	??_main^(0+128),f
   905  0076  2873               	goto	u577
   906  0077  0BA1               	decfsz	(??_main^(0+128)+1),f
   907  0078  2873               	goto	u577
   908  0079  0000               	nop
   909                           
   910                           ;main.c: 94:     send_data(0x085);
   911  007A  3000               	movlw	0
   912  007B  00F4               	movwf	send_data@data+3
   913  007C  3000               	movlw	0
   914  007D  00F3               	movwf	send_data@data+2
   915  007E  3000               	movlw	0
   916  007F  00F2               	movwf	send_data@data+1
   917  0080  3085               	movlw	133
   918  0081  00F1               	movwf	send_data@data
   919  0082  3180  20B4  3180   	fcall	_send_data
   920                           
   921                           ;main.c: 96:     _delay((unsigned long)((5000)*(8000000/4000.0)));
   922  0085  3033               	movlw	51
   923  0086  0021               	movlb	1	; select bank1
   924  0087  00A1               	movwf	(??_main^(0+128)+1)
   925  0088  30BB               	movlw	187
   926  0089  00A0               	movwf	??_main^(0+128)
   927  008A  30DF               	movlw	223
   928  008B                     u587:	
   929  008B  0B89               	decfsz	9,f
   930  008C  288B               	goto	u587
   931  008D  0BA0               	decfsz	??_main^(0+128),f
   932  008E  288B               	goto	u587
   933  008F  0BA1               	decfsz	(??_main^(0+128)+1),f
   934  0090  288B               	goto	u587
   935  0091  3200               	nop2
   936  0092                     l1467:	
   937                           
   938                           ;main.c: 102:        send_data(rx_ser);
   939  0092  0879               	movf	_rx_ser,w
   940  0093  0021               	movlb	1	; select bank1
   941  0094  00A0               	movwf	??_main^(0+128)
   942  0095  01A1               	clrf	(??_main^(0+128)+1)
   943  0096  01A2               	clrf	(??_main^(0+128)+2)
   944  0097  01A3               	clrf	(??_main^(0+128)+3)
   945  0098  0823               	movf	(??_main+3)^(0+128),w
   946  0099  00F4               	movwf	send_data@data+3
   947  009A  0822               	movf	(??_main+2)^(0+128),w
   948  009B  00F3               	movwf	send_data@data+2
   949  009C  0821               	movf	(??_main+1)^(0+128),w
   950  009D  00F2               	movwf	send_data@data+1
   951  009E  0820               	movf	??_main^(0+128),w
   952  009F  00F1               	movwf	send_data@data
   953  00A0  3180  20B4  3180   	fcall	_send_data
   954                           
   955                           ;main.c: 103:        TXREG=rx_ser;
   956  00A3  0879               	movf	_rx_ser,w
   957  00A4  0023               	movlb	3	; select bank3
   958  00A5  009A               	movwf	26	;volatile
   959                           
   960                           ;main.c: 104:        _delay((unsigned long)((500)*(8000000/4000.0)));
   961  00A6  3006               	movlw	6
   962  00A7  0021               	movlb	1	; select bank1
   963  00A8  00A1               	movwf	(??_main^(0+128)+1)
   964  00A9  3013               	movlw	19
   965  00AA  00A0               	movwf	??_main^(0+128)
   966  00AB  30AD               	movlw	173
   967  00AC                     u597:	
   968  00AC  0B89               	decfsz	9,f
   969  00AD  28AC               	goto	u597
   970  00AE  0BA0               	decfsz	??_main^(0+128),f
   971  00AF  28AC               	goto	u597
   972  00B0  0BA1               	decfsz	(??_main^(0+128)+1),f
   973  00B1  28AC               	goto	u597
   974  00B2  3200               	nop2
   975  00B3  2892               	goto	l1467
   976  00B4                     __end_of_main:	
   977                           
   978                           	psect	text1
   979  00B4                     __ptext1:	
   980 ;; *************** function _send_data *****************
   981 ;; Defined at:
   982 ;;		line 28 in file "main.c"
   983 ;; Parameters:    Size  Location     Type
   984 ;;  data            4    1[COMMON] long 
   985 ;; Auto vars:     Size  Location     Type
   986 ;;  temp            4    0[BANK0 ] long 
   987 ;;  i               2    4[BANK0 ] int 
   988 ;; Return value:  Size  Location     Type
   989 ;;                  1    wreg      void 
   990 ;; Registers used:
   991 ;;		wreg, status,2, status,0
   992 ;; Tracked objects:
   993 ;;		On entry : 0/0
   994 ;;		On exit  : 0/0
   995 ;;		Unchanged: 0/0
   996 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   997 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   998 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
   999 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1000 ;;      Totals:         8       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1001 ;;Total ram usage:       14 bytes
  1002 ;; Hardware stack levels used:    1
  1003 ;; Hardware stack levels required when called:    1
  1004 ;; This function calls:
  1005 ;;		Nothing
  1006 ;; This function is called by:
  1007 ;;		_main
  1008 ;; This function uses a non-reentrant model
  1009 ;;
  1010                           
  1011                           
  1012                           ;psect for function _send_data
  1013  00B4                     _send_data:	
  1014                           
  1015                           ;main.c: 28: void send_data(long int data );main.c: 29: {;main.c: 30:     TRISCbits.TRIS
      +                          C0 = 0;
  1016                           
  1017                           ;incstack = 0
  1018                           ; Regs used in _send_data: [wreg+status,2+status,0]
  1019  00B4  0021               	movlb	1	; select bank1
  1020  00B5  100E               	bcf	14,0	;volatile
  1021                           
  1022                           ;main.c: 33:     INTCONbits.GIE = 1;
  1023  00B6  178B               	bsf	11,7	;volatile
  1024                           
  1025                           ;main.c: 34:     LATCbits.LATC0 = 0;
  1026  00B7  0022               	movlb	2	; select bank2
  1027  00B8  100E               	bcf	14,0	;volatile
  1028                           
  1029                           ;main.c: 36:     _delay((unsigned long)((2)*(8000000/4000.0)));
  1030  00B9  3006               	movlw	6
  1031  00BA  00F5               	movwf	??_send_data
  1032  00BB  3030               	movlw	48
  1033  00BC                     u607:	
  1034  00BC  0B89               	decfsz	9,f
  1035  00BD  28BC               	goto	u607
  1036  00BE  0BF5               	decfsz	??_send_data,f
  1037  00BF  28BC               	goto	u607
  1038  00C0  3200               	nop2
  1039                           
  1040                           ;main.c: 38:     for(i=0;i<11;i++)
  1041  00C1  0020               	movlb	0	; select bank0
  1042  00C2  01ED               	clrf	send_data@i
  1043  00C3  01EE               	clrf	send_data@i+1
  1044  00C4                     l1125:	
  1045  00C4  0020               	movlb	0	; select bank0
  1046  00C5  0865               	movf	_clk_low,w
  1047  00C6  0466               	iorwf	_clk_low+1,w
  1048  00C7  1903               	btfsc	3,2
  1049  00C8  28C4               	goto	l1125
  1050                           
  1051                           ;main.c: 42:         if(i == 10)
  1052  00C9  300A               	movlw	10
  1053  00CA  066D               	xorwf	send_data@i,w
  1054  00CB  046E               	iorwf	send_data@i+1,w
  1055  00CC  1D03               	btfss	3,2
  1056  00CD  28D1               	goto	l1131
  1057                           
  1058                           ;main.c: 43:         {;main.c: 44:             LATCbits.LATC0 = 1;
  1059  00CE  0022               	movlb	2	; select bank2
  1060  00CF  140E               	bsf	14,0	;volatile
  1061                           
  1062                           ;main.c: 45:         }
  1063  00D0  28FD               	goto	l1137
  1064  00D1                     l1131:	
  1065                           
  1066                           ;main.c: 47:             temp = (data >> (9-i)) & 0x01;
  1067  00D1  0871               	movf	send_data@data,w
  1068  00D2  00F5               	movwf	??_send_data
  1069  00D3  0872               	movf	send_data@data+1,w
  1070  00D4  00F6               	movwf	??_send_data+1
  1071  00D5  0873               	movf	send_data@data+2,w
  1072  00D6  00F7               	movwf	??_send_data+2
  1073  00D7  0874               	movf	send_data@data+3,w
  1074  00D8  00F8               	movwf	??_send_data+3
  1075  00D9  086D               	movf	send_data@i,w
  1076  00DA  3C09               	sublw	9
  1077  00DB  0A89               	incf	9,f
  1078  00DC  28E1               	goto	u220
  1079  00DD                     u225:	
  1080  00DD  37F8               	asrf	??_send_data+3,f
  1081  00DE  0CF7               	rrf	??_send_data+2,f
  1082  00DF  0CF6               	rrf	??_send_data+1,f
  1083  00E0  0CF5               	rrf	??_send_data,f
  1084  00E1                     u220:	
  1085  00E1  0B89               	decfsz	9,f
  1086  00E2  28DD               	goto	u225
  1087  00E3  3001               	movlw	1
  1088  00E4  0575               	andwf	??_send_data,w
  1089  00E5  00E9               	movwf	send_data@temp
  1090  00E6  3000               	movlw	0
  1091  00E7  0576               	andwf	??_send_data+1,w
  1092  00E8  00EA               	movwf	send_data@temp+1
  1093  00E9  3000               	movlw	0
  1094  00EA  0577               	andwf	??_send_data+2,w
  1095  00EB  00EB               	movwf	send_data@temp+2
  1096  00EC  3000               	movlw	0
  1097  00ED  0578               	andwf	??_send_data+3,w
  1098  00EE  00EC               	movwf	send_data@temp+3
  1099                           
  1100                           ;main.c: 48:             if(temp == 1)
  1101  00EF  0369               	decf	send_data@temp,w
  1102  00F0  046A               	iorwf	send_data@temp+1,w
  1103  00F1  046B               	iorwf	send_data@temp+2,w
  1104  00F2  046C               	iorwf	send_data@temp+3,w
  1105  00F3  1D03               	btfss	3,2
  1106  00F4  28F8               	goto	l32
  1107                           
  1108                           ;main.c: 49:             {;main.c: 50:                 LATCbits.LATC0 = 1;
  1109  00F5  0022               	movlb	2	; select bank2
  1110  00F6  140E               	bsf	14,0	;volatile
  1111                           
  1112                           ;main.c: 51:             }
  1113  00F7  28FA               	goto	l1135
  1114  00F8                     l32:	
  1115                           ;main.c: 52:             else{
  1116                           
  1117                           
  1118                           ;main.c: 53:                 LATCbits.LATC0 = 0;
  1119  00F8  0022               	movlb	2	; select bank2
  1120  00F9  100E               	bcf	14,0	;volatile
  1121  00FA                     l1135:	
  1122                           
  1123                           ;main.c: 56:             clk_low = 0;
  1124  00FA  0020               	movlb	0	; select bank0
  1125  00FB  01E5               	clrf	_clk_low
  1126  00FC  01E6               	clrf	_clk_low+1
  1127  00FD                     l1137:	
  1128                           
  1129                           ;main.c: 59:     }
  1130  00FD  3001               	movlw	1
  1131  00FE  0020               	movlb	0	; select bank0
  1132  00FF  07ED               	addwf	send_data@i,f
  1133  0100  3000               	movlw	0
  1134  0101  3DEE               	addwfc	send_data@i+1,f
  1135  0102  086E               	movf	send_data@i+1,w
  1136  0103  3A80               	xorlw	128
  1137  0104  00F5               	movwf	??_send_data
  1138  0105  3080               	movlw	128
  1139  0106  0275               	subwf	??_send_data,w
  1140  0107  1D03               	skipz
  1141  0108  290B               	goto	u245
  1142  0109  300B               	movlw	11
  1143  010A  026D               	subwf	send_data@i,w
  1144  010B                     u245:	
  1145  010B  1C03               	skipc
  1146  010C  28C4               	goto	l1125
  1147                           
  1148                           ;main.c: 61:     clk_low = 0;
  1149  010D  0020               	movlb	0	; select bank0
  1150  010E  01E5               	clrf	_clk_low
  1151  010F  01E6               	clrf	_clk_low+1
  1152                           
  1153                           ;main.c: 62:     INTCONbits.GIE = 0;
  1154  0110  138B               	bcf	11,7	;volatile
  1155                           
  1156                           ;main.c: 63:     LATCbits.LATC0 = 1;
  1157  0111  0022               	movlb	2	; select bank2
  1158  0112  140E               	bsf	14,0	;volatile
  1159                           
  1160                           ;main.c: 65:     TRISCbits.TRISC0 = 1;
  1161  0113  0021               	movlb	1	; select bank1
  1162  0114  140E               	bsf	14,0	;volatile
  1163  0115  0008               	return
  1164  0116                     __end_of_send_data:	
  1165                           
  1166                           	psect	text2
  1167  0169                     __ptext2:	
  1168 ;; *************** function _config *****************
  1169 ;; Defined at:
  1170 ;;		line 17 in file "config.c"
  1171 ;; Parameters:    Size  Location     Type
  1172 ;;		None
  1173 ;; Auto vars:     Size  Location     Type
  1174 ;;		None
  1175 ;; Return value:  Size  Location     Type
  1176 ;;                  1    wreg      void 
  1177 ;; Registers used:
  1178 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1179 ;; Tracked objects:
  1180 ;;		On entry : 0/0
  1181 ;;		On exit  : 0/0
  1182 ;;		Unchanged: 0/0
  1183 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1184 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1185 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1186 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1187 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1188 ;;Total ram usage:        2 bytes
  1189 ;; Hardware stack levels used:    1
  1190 ;; Hardware stack levels required when called:    2
  1191 ;; This function calls:
  1192 ;;		_USARTInit
  1193 ;; This function is called by:
  1194 ;;		_main
  1195 ;; This function uses a non-reentrant model
  1196 ;;
  1197                           
  1198                           
  1199                           ;psect for function _config
  1200  0169                     _config:	
  1201                           
  1202                           ;config.c: 20:     LATCbits.LATC0=1;
  1203                           
  1204                           ;incstack = 0
  1205                           ; Regs used in _config: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1206  0169  0022               	movlb	2	; select bank2
  1207  016A  140E               	bsf	14,0	;volatile
  1208                           
  1209                           ;config.c: 22:     OSCCONbits.IRCF0=0;
  1210  016B  0021               	movlb	1	; select bank1
  1211  016C  1199               	bcf	25,3	;volatile
  1212                           
  1213                           ;config.c: 23:     OSCCONbits.IRCF1=1;
  1214  016D  1619               	bsf	25,4	;volatile
  1215                           
  1216                           ;config.c: 24:     OSCCONbits.IRCF2=1;
  1217  016E  1699               	bsf	25,5	;volatile
  1218                           
  1219                           ;config.c: 25:     OSCCONbits.IRCF3=1;
  1220  016F  1719               	bsf	25,6	;volatile
  1221                           
  1222                           ;config.c: 27:     INTCONbits.GIE=0;
  1223  0170  138B               	bcf	11,7	;volatile
  1224                           
  1225                           ;config.c: 29:     ANSELA=0X00;
  1226  0171  0023               	movlb	3	; select bank3
  1227  0172  018C               	clrf	12	;volatile
  1228                           
  1229                           ;config.c: 30:     ANSELC=0X00;
  1230  0173  018E               	clrf	14	;volatile
  1231                           
  1232                           ;config.c: 31:     TRISA=0X00;
  1233  0174  0021               	movlb	1	; select bank1
  1234  0175  018C               	clrf	12	;volatile
  1235                           
  1236                           ;config.c: 32:     TRISC=0X00;
  1237  0176  018E               	clrf	14	;volatile
  1238                           
  1239                           ;config.c: 33:     PORTA=0X00;
  1240  0177  0020               	movlb	0	; select bank0
  1241  0178  018C               	clrf	12	;volatile
  1242                           
  1243                           ;config.c: 34:     PORTC=0X00;
  1244  0179  018E               	clrf	14	;volatile
  1245                           
  1246                           ;config.c: 35:     LATA=0X00;
  1247  017A  0022               	movlb	2	; select bank2
  1248  017B  018C               	clrf	12	;volatile
  1249                           
  1250                           ;config.c: 36:     LATC=0X00;
  1251  017C  018E               	clrf	14	;volatile
  1252                           
  1253                           ;config.c: 38:     LATCbits.LATC0=1;
  1254  017D  140E               	bsf	14,0	;volatile
  1255                           
  1256                           ;config.c: 39:     OPTION_REGbits.nWPUEN=0;
  1257  017E  0021               	movlb	1	; select bank1
  1258  017F  1395               	bcf	21,7	;volatile
  1259                           
  1260                           ;config.c: 40:     WPUAbits.WPUA2=1;
  1261  0180  0024               	movlb	4	; select bank4
  1262  0181  150C               	bsf	12,2	;volatile
  1263                           
  1264                           ;config.c: 42:     TRISAbits.TRISA2 = 1;
  1265  0182  0021               	movlb	1	; select bank1
  1266  0183  150C               	bsf	12,2	;volatile
  1267                           
  1268                           ;config.c: 43:     TRISCbits.TRISC1 = 1;
  1269  0184  148E               	bsf	14,1	;volatile
  1270                           
  1271                           ;config.c: 44:     OPTION_REGbits.INTEDG = 1;
  1272  0185  1715               	bsf	21,6	;volatile
  1273                           
  1274                           ;config.c: 45:     _delay((unsigned long)((1000)*(8000000/4000.0)));
  1275  0186  300B               	movlw	11
  1276  0187  00F5               	movwf	??_config+1
  1277  0188  3026               	movlw	38
  1278  0189  00F4               	movwf	??_config
  1279  018A  305E               	movlw	94
  1280  018B                     u617:	
  1281  018B  0B89               	decfsz	9,f
  1282  018C  298B               	goto	u617
  1283  018D  0BF4               	decfsz	??_config,f
  1284  018E  298B               	goto	u617
  1285  018F  0BF5               	decfsz	??_config+1,f
  1286  0190  298B               	goto	u617
  1287                           
  1288                           ;config.c: 47:     INTCONbits.GIE = 0;
  1289  0191  138B               	bcf	11,7	;volatile
  1290                           
  1291                           ;config.c: 48:     INTCONbits.INTE = 1;
  1292  0192  160B               	bsf	11,4	;volatile
  1293                           
  1294                           ;config.c: 52:     USARTInit(9600);
  1295  0193  3080               	movlw	128
  1296  0194  00F1               	movwf	USARTInit@baud_rate
  1297  0195  3025               	movlw	37
  1298  0196  00F2               	movwf	USARTInit@baud_rate+1
  1299  0197  3181  2116         	fcall	_USARTInit
  1300  0199  0008               	return
  1301  019A                     __end_of_config:	
  1302                           
  1303                           	psect	text3
  1304  0116                     __ptext3:	
  1305 ;; *************** function _USARTInit *****************
  1306 ;; Defined at:
  1307 ;;		line 31 in file "usart_pic16.c"
  1308 ;; Parameters:    Size  Location     Type
  1309 ;;  baud_rate       2    1[COMMON] unsigned short 
  1310 ;; Auto vars:     Size  Location     Type
  1311 ;;		None
  1312 ;; Return value:  Size  Location     Type
  1313 ;;                  1    wreg      void 
  1314 ;; Registers used:
  1315 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1316 ;; Tracked objects:
  1317 ;;		On entry : 0/0
  1318 ;;		On exit  : 0/0
  1319 ;;		Unchanged: 0/0
  1320 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1321 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1322 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1323 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1324 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1325 ;;Total ram usage:        3 bytes
  1326 ;; Hardware stack levels used:    1
  1327 ;; Hardware stack levels required when called:    1
  1328 ;; This function calls:
  1329 ;;		Nothing
  1330 ;; This function is called by:
  1331 ;;		_config
  1332 ;; This function uses a non-reentrant model
  1333 ;;
  1334                           
  1335                           
  1336                           ;psect for function _USARTInit
  1337  0116                     _USARTInit:	
  1338                           
  1339                           ;usart_pic16.c: 31: void USARTInit(uint16_t baud_rate);usart_pic16.c: 32: {;usart_pic16.
      +                          c: 33:     APFCON0bits.RXDTSEL = 0;
  1340                           
  1341                           ;incstack = 0
  1342                           ; Regs used in _USARTInit: [wreg-fsr0h+status,2+status,0]
  1343  0116  0022               	movlb	2	; select bank2
  1344  0117  139D               	bcf	29,7	;volatile
  1345                           
  1346                           ;usart_pic16.c: 34:     APFCON0bits.TXCKSEL = 0;
  1347  0118  111D               	bcf	29,2	;volatile
  1348                           
  1349                           ;usart_pic16.c: 36:     TRISCbits.TRISC4 = 0;
  1350  0119  0021               	movlb	1	; select bank1
  1351  011A  120E               	bcf	14,4	;volatile
  1352                           
  1353                           ;usart_pic16.c: 37:     TRISCbits.TRISC5 = 1;
  1354  011B  168E               	bsf	14,5	;volatile
  1355                           
  1356                           ;usart_pic16.c: 39:     UQFront=UQEnd=-1;
  1357  011C  30FF               	movlw	255
  1358  011D  0020               	movlb	0	; select bank0
  1359  011E  00E7               	movwf	_UQEnd	;volatile
  1360  011F  00F3               	movwf	??_USARTInit
  1361  0120  0873               	movf	??_USARTInit,w
  1362  0121  00E8               	movwf	_UQFront	;volatile
  1363                           
  1364                           ;usart_pic16.c: 42:     switch(baud_rate)
  1365  0122  2938               	goto	l1091
  1366  0123                     l132:	
  1367                           ;usart_pic16.c: 43:     {;usart_pic16.c: 44:      case 9600:
  1368                           
  1369                           
  1370                           ;usart_pic16.c: 45:         SPBRG=12;
  1371  0123  3000               	movlw	0
  1372  0124  0023               	movlb	3	; select bank3
  1373  0125  009C               	movwf	28	;volatile
  1374  0126  300C               	movlw	12
  1375  0127  2936               	goto	L3
  1376  0128                     l134:	
  1377                           ;usart_pic16.c: 47:      case 19200:
  1378                           
  1379                           ;usart_pic16.c: 46:         break;
  1380                           
  1381                           
  1382                           ;usart_pic16.c: 48:         SPBRG=64;
  1383  0128  3000               	movlw	0
  1384  0129  0023               	movlb	3	; select bank3
  1385  012A  009C               	movwf	28	;volatile
  1386  012B  3040               	movlw	64
  1387  012C  2936               	goto	L3
  1388  012D                     l135:	
  1389                           ;usart_pic16.c: 50:      case 28800:
  1390                           
  1391                           ;usart_pic16.c: 49:         break;
  1392                           
  1393                           
  1394                           ;usart_pic16.c: 51:         SPBRG=42;
  1395  012D  3000               	movlw	0
  1396  012E  0023               	movlb	3	; select bank3
  1397  012F  009C               	movwf	28	;volatile
  1398  0130  302A               	movlw	42
  1399  0131  2936               	goto	L3
  1400  0132                     l136:	
  1401                           ;usart_pic16.c: 53:      case 33600:
  1402                           
  1403                           ;usart_pic16.c: 52:         break;
  1404                           
  1405                           
  1406                           ;usart_pic16.c: 54:         SPBRG=36;
  1407  0132  3000               	movlw	0
  1408  0133  0023               	movlb	3	; select bank3
  1409  0134  009C               	movwf	28	;volatile
  1410  0135  3024               	movlw	36
  1411  0136                     L3:	
  1412  0136  009B               	movwf	27	;volatile
  1413                           
  1414                           ;usart_pic16.c: 55:         break;
  1415  0137  295A               	goto	l133
  1416  0138                     l1091:	
  1417                           
  1418                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 4 sub-sw
      +                          itches
  1419                           ; Switch size 1, requested type "simple"
  1420                           ; Number of cases is 4, Range of values is 37 to 131
  1421                           ; switch strategies available:
  1422                           ; Name         Instructions Cycles
  1423                           ; simple_byte           13     7 (average)
  1424                           ; direct_byte          199     9 (fixed)
  1425                           ; jumptable            263     9 (fixed)
  1426                           ;	Chosen strategy is simple_byte
  1427  0138  0872               	movf	USARTInit@baud_rate+1,w
  1428  0139  3A25               	xorlw	37	; case 37
  1429  013A  1903               	skipnz
  1430  013B  2946               	goto	l1561
  1431  013C  3A6E               	xorlw	110	; case 75
  1432  013D  1903               	skipnz
  1433  013E  294B               	goto	l1563
  1434  013F  3A3B               	xorlw	59	; case 112
  1435  0140  1903               	skipnz
  1436  0141  2950               	goto	l1565
  1437  0142  3AF3               	xorlw	243	; case 131
  1438  0143  1903               	skipnz
  1439  0144  2955               	goto	l1567
  1440  0145  295A               	goto	l133
  1441  0146                     l1561:	
  1442                           
  1443                           ; Switch size 1, requested type "simple"
  1444                           ; Number of cases is 1, Range of values is 128 to 128
  1445                           ; switch strategies available:
  1446                           ; Name         Instructions Cycles
  1447                           ; simple_byte            4     3 (average)
  1448                           ; direct_byte           11     9 (fixed)
  1449                           ; jumptable            263     9 (fixed)
  1450                           ;	Chosen strategy is simple_byte
  1451  0146  0871               	movf	USARTInit@baud_rate,w
  1452  0147  3A80               	xorlw	128	; case 128
  1453  0148  1903               	skipnz
  1454  0149  2923               	goto	l132
  1455  014A  295A               	goto	l133
  1456  014B                     l1563:	
  1457                           
  1458                           ; Switch size 1, requested type "simple"
  1459                           ; Number of cases is 1, Range of values is 0 to 0
  1460                           ; switch strategies available:
  1461                           ; Name         Instructions Cycles
  1462                           ; simple_byte            4     3 (average)
  1463                           ; direct_byte            8     6 (fixed)
  1464                           ; jumptable            260     6 (fixed)
  1465                           ;	Chosen strategy is simple_byte
  1466  014B  0871               	movf	USARTInit@baud_rate,w
  1467  014C  3A00               	xorlw	0	; case 0
  1468  014D  1903               	skipnz
  1469  014E  2928               	goto	l134
  1470  014F  295A               	goto	l133
  1471  0150                     l1565:	
  1472                           
  1473                           ; Switch size 1, requested type "simple"
  1474                           ; Number of cases is 1, Range of values is 128 to 128
  1475                           ; switch strategies available:
  1476                           ; Name         Instructions Cycles
  1477                           ; simple_byte            4     3 (average)
  1478                           ; direct_byte           11     9 (fixed)
  1479                           ; jumptable            263     9 (fixed)
  1480                           ;	Chosen strategy is simple_byte
  1481  0150  0871               	movf	USARTInit@baud_rate,w
  1482  0151  3A80               	xorlw	128	; case 128
  1483  0152  1903               	skipnz
  1484  0153  292D               	goto	l135
  1485  0154  295A               	goto	l133
  1486  0155                     l1567:	
  1487                           
  1488                           ; Switch size 1, requested type "simple"
  1489                           ; Number of cases is 1, Range of values is 64 to 64
  1490                           ; switch strategies available:
  1491                           ; Name         Instructions Cycles
  1492                           ; simple_byte            4     3 (average)
  1493                           ; direct_byte           11     9 (fixed)
  1494                           ; jumptable            263     9 (fixed)
  1495                           ;	Chosen strategy is simple_byte
  1496  0155  0871               	movf	USARTInit@baud_rate,w
  1497  0156  3A40               	xorlw	64	; case 64
  1498  0157  1903               	skipnz
  1499  0158  2932               	goto	l136
  1500  0159  295A               	goto	l133
  1501  015A                     l133:	
  1502                           
  1503                           ;usart_pic16.c: 58:     TXSTAbits.TX9=0;
  1504  015A  0023               	movlb	3	; select bank3
  1505  015B  131E               	bcf	30,6	;volatile
  1506                           
  1507                           ;usart_pic16.c: 59:     TXSTAbits.TXEN=1;
  1508  015C  169E               	bsf	30,5	;volatile
  1509                           
  1510                           ;usart_pic16.c: 60:     TXSTAbits.SYNC=0;
  1511  015D  121E               	bcf	30,4	;volatile
  1512                           
  1513                           ;usart_pic16.c: 61:     TXSTAbits.BRGH=0;
  1514  015E  111E               	bcf	30,2	;volatile
  1515                           
  1516                           ;usart_pic16.c: 63:     BAUDCONbits.BRG16 = 0;
  1517  015F  119F               	bcf	31,3	;volatile
  1518                           
  1519                           ;usart_pic16.c: 66:     RCSTAbits.SPEN=1;
  1520  0160  179D               	bsf	29,7	;volatile
  1521                           
  1522                           ;usart_pic16.c: 67:     RCSTAbits.RX9=0;
  1523  0161  131D               	bcf	29,6	;volatile
  1524                           
  1525                           ;usart_pic16.c: 68:     RCSTAbits.CREN=1;
  1526  0162  161D               	bsf	29,4	;volatile
  1527                           
  1528                           ;usart_pic16.c: 69:     RCSTAbits.ADDEN=0;
  1529  0163  119D               	bcf	29,3	;volatile
  1530                           
  1531                           ;usart_pic16.c: 73:     PIE1bits.RCIE=1;
  1532  0164  0021               	movlb	1	; select bank1
  1533  0165  1691               	bsf	17,5	;volatile
  1534                           
  1535                           ;usart_pic16.c: 74:     PEIE=1;
  1536  0166  170B               	bsf	11,6	;volatile
  1537                           
  1538                           ;usart_pic16.c: 76:     (INTCONbits.GIE = 1);
  1539  0167  178B               	bsf	11,7	;volatile
  1540  0168  0008               	return
  1541  0169                     __end_of_USARTInit:	
  1542                           
  1543                           	psect	intentry
  1544  0004                     __pintentry:	
  1545 ;; *************** function _int0 *****************
  1546 ;; Defined at:
  1547 ;;		line 70 in file "main.c"
  1548 ;; Parameters:    Size  Location     Type
  1549 ;;		None
  1550 ;; Auto vars:     Size  Location     Type
  1551 ;;		None
  1552 ;; Return value:  Size  Location     Type
  1553 ;;                  1    wreg      void 
  1554 ;; Registers used:
  1555 ;;		wreg
  1556 ;; Tracked objects:
  1557 ;;		On entry : 0/0
  1558 ;;		On exit  : 0/0
  1559 ;;		Unchanged: 0/0
  1560 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1561 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1562 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1563 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1564 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1565 ;;Total ram usage:        1 bytes
  1566 ;; Hardware stack levels used:    1
  1567 ;; This function calls:
  1568 ;;		Nothing
  1569 ;; This function is called by:
  1570 ;;		Interrupt level 1
  1571 ;; This function uses a non-reentrant model
  1572 ;;
  1573                           
  1574  0004                     _int0:	
  1575                           
  1576                           ;incstack = 0
  1577  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  1578                           
  1579                           ; Regs used in _int0: [wreg]
  1580  0005  3180               	pagesel	$
  1581                           
  1582                           ;main.c: 72:     if(INTCONbits.INTF == 1 ){
  1583  0006  1C8B               	btfss	11,1	;volatile
  1584  0007  280E               	goto	i1l1191
  1585                           
  1586                           ;main.c: 73:         clk_low = 1;
  1587  0008  3001               	movlw	1
  1588  0009  0020               	movlb	0	; select bank0
  1589  000A  00E5               	movwf	_clk_low
  1590  000B  3000               	movlw	0
  1591  000C  00E6               	movwf	_clk_low+1
  1592                           
  1593                           ;main.c: 74:         INTCONbits.INTF = 0;
  1594  000D  108B               	bcf	11,1	;volatile
  1595  000E                     i1l1191:	
  1596                           
  1597                           ;main.c: 77:     if(RCIF == 1){
  1598  000E  0020               	movlb	0	; select bank0
  1599  000F  1E91               	btfss	17,5	;volatile
  1600  0010  2816               	goto	i1l41
  1601                           
  1602                           ;main.c: 78:         rx_ser = RCREG;
  1603  0011  0023               	movlb	3	; select bank3
  1604  0012  0819               	movf	25,w	;volatile
  1605  0013  00F0               	movwf	??_int0
  1606  0014  0870               	movf	??_int0,w
  1607  0015  00F9               	movwf	_rx_ser
  1608  0016                     i1l41:	
  1609  0016  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  1610  0017  0009               	retfie
  1611  0018                     __end_of_int0:	
  1612  007E                     btemp	set	126	;btemp
  1613  007E                     int$flags	set	126
  1614  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         74
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      9      10
    BANK0            80      6      79
    BANK1            80      4       4
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_send_data
    _config->_USARTInit

Critical Paths under _int0 in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_send_data

Critical Paths under _int0 in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _int0 in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _int0 in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _int0 in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _int0 in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _int0 in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _int0 in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _int0 in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _int0 in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _int0 in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _int0 in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _int0 in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _int0 in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0     995
                                              0 BANK1      4     4      0
                             _config
                          _send_data
 ---------------------------------------------------------------------------------
 (1) _send_data                                           14    10      4     897
                                              1 COMMON     8     4      4
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (1) _config                                               2     2      0      98
                                              4 COMMON     2     2      0
                          _USARTInit
 ---------------------------------------------------------------------------------
 (2) _USARTInit                                            3     1      2      98
                                              1 COMMON     3     1      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _int0                                                 1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _config
     _USARTInit
   _send_data

 _int0 (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      9       A       2       71.4%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      6      4F       5       98.8%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      4       4       7        5.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      5D      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      5D      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Sat Oct 19 12:27:15 2019

            __CFG_CP$OFF 0000                       l32 00F8       USARTInit@baud_rate 0071  
            __CFG_LVP$ON 0000                      l132 0123                      l133 015A  
                    l134 0128                      l135 012D                      l136 0132  
                    u220 00E1                      u225 00DD                      u245 010B  
           __CFG_CPD$OFF 0000                      u607 00BC                      u617 018B  
                    u567 005B                      u577 0073                      u587 008B  
                    u597 00AC             __CFG_BORV$LO 0000                      wreg 0009  
                   l1131 00D1                     l1125 00C4                     l1135 00FA  
                   l1137 00FD                     l1091 0138                     l1561 0146  
                   l1563 014B                     l1467 0092                     l1565 0150  
                   l1567 0155                     _LATA 010C                     _LATC 010E  
                   _PEIE 005E                     i1l41 0016                     _RCIF 008D  
           __CFG_WRT$OFF 0000                     _int0 0004                     _main 0026  
                   fsr0h 0005                     indf0 0000                     fsr0l 0004  
                   btemp 007E                     start 0018            __CFG_IESO$OFF 0000  
          __CFG_MCLRE$ON 0000                    ?_int0 0070                    ?_main 0070  
          __CFG_WDTE$OFF 0000                    _RCREG 0199                    _SPBRG 019B  
                  _PORTA 000C                    _PORTC 000E                    _TRISA 008C  
                  _TRISC 008E                    _TXREG 019A                    _UQEnd 0067  
         __CFG_FCMEN$OFF 0000           __CFG_BOREN$OFF 0000       __size_of_USARTInit 0053  
                  status 0003                    wtemp0 007E          __initialization 001A  
           __end_of_int0 0018             __end_of_main 00B4                   ??_int0 0070  
                 ??_main 00A0           __CFG_PLLEN$OFF 0000                   _ANSELA 018C  
                 _ANSELC 018E                   i1l1191 000E                   _URBuff 0020  
         __CFG_PWRTE$OFF 0000                   _config 0169        __end_of_USARTInit 0169  
                 _rx_ser 0079  __end_of__initialization 0022           __pcstackCOMMON 0070  
         _OPTION_REGbits 0095               __pbssBANK0 0020               __pmaintext 0026  
             __pintentry 0004                  ?_config 0070       __size_of_send_data 0062  
     USARTWriteInt@F2384 0060                  _UQFront 0068          __size_of_config 0031  
        __CFG_STVREN$OFF 0000                  _clk_low 0065                  __ptext1 00B4  
                __ptext2 0169                  __ptext3 0116                  clrloop0 019B  
   end_of_initialization 0022        __end_of_send_data 0116                _RCSTAbits 019D  
          send_data@data 0071            send_data@temp 0069                _PORTCbits 000E  
       __CFG_FOSC$INTOSC 0000                _USARTInit 0116                _TRISAbits 008C  
              _TRISCbits 008E                _TXSTAbits 019E              _BAUDCONbits 019F  
         __end_of_config 019A      start_initialization 001A               ?_USARTInit 0071  
            _APFCON0bits 011D                 ??_config 0074              __pbssCOMMON 0079  
              ___latbits 0002            __pcstackBANK0 0069            __pcstackBANK1 00A0  
             send_data@i 006D              ??_USARTInit 0073                 _LATCbits 010E  
              clear_ram0 019A                 _PIE1bits 0091                _send_data 00B4  
               _PIR1bits 0011                 _WPUAbits 020C               ?_send_data 0071  
          __size_of_int0 0014            __size_of_main 008E                 int$flags 007E  
             _INTCONbits 000B                 intlevel1 0000        __CFG_CLKOUTEN$OFF 0000  
            ??_send_data 0075               _OSCCONbits 0099  

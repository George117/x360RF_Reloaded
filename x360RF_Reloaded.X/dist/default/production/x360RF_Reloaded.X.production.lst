

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Sat Oct 19 13:45:42 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	16F1825
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
     8                           	psect	clrtext,global,class=CODE,delta=2
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,merge=1,delta=2
    14                           	psect	text3,local,class=CODE,merge=1,delta=2
    15                           	psect	intentry,global,class=CODE,delta=2
    16                           	dabs	1,0x7E,2
    17  0000                     
    18                           ; Version 2.05
    19                           ; Generated 20/12/2018 GMT
    20                           ; 
    21                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    22                           ; All rights reserved.
    23                           ; 
    24                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    25                           ; 
    26                           ; Redistribution and use in source and binary forms, with or without modification, are
    27                           ; permitted provided that the following conditions are met:
    28                           ; 
    29                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    30                           ;        conditions and the following disclaimer.
    31                           ; 
    32                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    33                           ;        of conditions and the following disclaimer in the documentation and/or other
    34                           ;        materials provided with the distribution.
    35                           ; 
    36                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    37                           ;        software without specific prior written permission.
    38                           ; 
    39                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    40                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    41                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    42                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    43                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    44                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    45                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    46                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    47                           ; 
    48                           ; 
    49                           ; Code-generator required, PIC16F1825 Definitions
    50                           ; 
    51                           ; SFR Addresses
    52  0000                     	;# 
    53  0001                     	;# 
    54  0002                     	;# 
    55  0003                     	;# 
    56  0004                     	;# 
    57  0005                     	;# 
    58  0006                     	;# 
    59  0007                     	;# 
    60  0008                     	;# 
    61  0009                     	;# 
    62  000A                     	;# 
    63  000B                     	;# 
    64  000C                     	;# 
    65  000E                     	;# 
    66  0011                     	;# 
    67  0012                     	;# 
    68  0013                     	;# 
    69  0015                     	;# 
    70  0016                     	;# 
    71  0016                     	;# 
    72  0017                     	;# 
    73  0018                     	;# 
    74  0019                     	;# 
    75  001A                     	;# 
    76  001B                     	;# 
    77  001C                     	;# 
    78  001E                     	;# 
    79  001F                     	;# 
    80  008C                     	;# 
    81  008E                     	;# 
    82  0091                     	;# 
    83  0092                     	;# 
    84  0093                     	;# 
    85  0095                     	;# 
    86  0096                     	;# 
    87  0097                     	;# 
    88  0098                     	;# 
    89  0099                     	;# 
    90  009A                     	;# 
    91  009B                     	;# 
    92  009B                     	;# 
    93  009C                     	;# 
    94  009D                     	;# 
    95  009E                     	;# 
    96  010C                     	;# 
    97  010E                     	;# 
    98  0111                     	;# 
    99  0112                     	;# 
   100  0113                     	;# 
   101  0114                     	;# 
   102  0115                     	;# 
   103  0116                     	;# 
   104  0117                     	;# 
   105  0118                     	;# 
   106  0119                     	;# 
   107  011A                     	;# 
   108  011B                     	;# 
   109  011D                     	;# 
   110  011E                     	;# 
   111  018C                     	;# 
   112  018E                     	;# 
   113  0191                     	;# 
   114  0191                     	;# 
   115  0192                     	;# 
   116  0193                     	;# 
   117  0193                     	;# 
   118  0193                     	;# 
   119  0194                     	;# 
   120  0195                     	;# 
   121  0196                     	;# 
   122  0199                     	;# 
   123  019A                     	;# 
   124  019B                     	;# 
   125  019B                     	;# 
   126  019C                     	;# 
   127  019D                     	;# 
   128  019E                     	;# 
   129  019F                     	;# 
   130  020C                     	;# 
   131  020E                     	;# 
   132  0211                     	;# 
   133  0211                     	;# 
   134  0212                     	;# 
   135  0212                     	;# 
   136  0213                     	;# 
   137  0213                     	;# 
   138  0214                     	;# 
   139  0214                     	;# 
   140  0215                     	;# 
   141  0215                     	;# 
   142  0215                     	;# 
   143  0216                     	;# 
   144  0216                     	;# 
   145  0217                     	;# 
   146  0217                     	;# 
   147  0291                     	;# 
   148  0291                     	;# 
   149  0292                     	;# 
   150  0293                     	;# 
   151  0294                     	;# 
   152  0295                     	;# 
   153  0295                     	;# 
   154  0296                     	;# 
   155  0298                     	;# 
   156  0298                     	;# 
   157  0299                     	;# 
   158  029A                     	;# 
   159  029B                     	;# 
   160  029C                     	;# 
   161  029D                     	;# 
   162  029E                     	;# 
   163  0311                     	;# 
   164  0311                     	;# 
   165  0312                     	;# 
   166  0313                     	;# 
   167  0318                     	;# 
   168  0318                     	;# 
   169  0319                     	;# 
   170  031A                     	;# 
   171  038C                     	;# 
   172  038E                     	;# 
   173  0391                     	;# 
   174  0392                     	;# 
   175  0393                     	;# 
   176  039A                     	;# 
   177  039C                     	;# 
   178  039D                     	;# 
   179  039E                     	;# 
   180  039F                     	;# 
   181  0415                     	;# 
   182  0416                     	;# 
   183  0417                     	;# 
   184  041C                     	;# 
   185  041D                     	;# 
   186  041E                     	;# 
   187  0FE4                     	;# 
   188  0FE5                     	;# 
   189  0FE6                     	;# 
   190  0FE7                     	;# 
   191  0FE8                     	;# 
   192  0FE9                     	;# 
   193  0FEA                     	;# 
   194  0FEB                     	;# 
   195  0FED                     	;# 
   196  0FEE                     	;# 
   197  0FEF                     	;# 
   198  0000                     	;# 
   199  0001                     	;# 
   200  0002                     	;# 
   201  0003                     	;# 
   202  0004                     	;# 
   203  0005                     	;# 
   204  0006                     	;# 
   205  0007                     	;# 
   206  0008                     	;# 
   207  0009                     	;# 
   208  000A                     	;# 
   209  000B                     	;# 
   210  000C                     	;# 
   211  000E                     	;# 
   212  0011                     	;# 
   213  0012                     	;# 
   214  0013                     	;# 
   215  0015                     	;# 
   216  0016                     	;# 
   217  0016                     	;# 
   218  0017                     	;# 
   219  0018                     	;# 
   220  0019                     	;# 
   221  001A                     	;# 
   222  001B                     	;# 
   223  001C                     	;# 
   224  001E                     	;# 
   225  001F                     	;# 
   226  008C                     	;# 
   227  008E                     	;# 
   228  0091                     	;# 
   229  0092                     	;# 
   230  0093                     	;# 
   231  0095                     	;# 
   232  0096                     	;# 
   233  0097                     	;# 
   234  0098                     	;# 
   235  0099                     	;# 
   236  009A                     	;# 
   237  009B                     	;# 
   238  009B                     	;# 
   239  009C                     	;# 
   240  009D                     	;# 
   241  009E                     	;# 
   242  010C                     	;# 
   243  010E                     	;# 
   244  0111                     	;# 
   245  0112                     	;# 
   246  0113                     	;# 
   247  0114                     	;# 
   248  0115                     	;# 
   249  0116                     	;# 
   250  0117                     	;# 
   251  0118                     	;# 
   252  0119                     	;# 
   253  011A                     	;# 
   254  011B                     	;# 
   255  011D                     	;# 
   256  011E                     	;# 
   257  018C                     	;# 
   258  018E                     	;# 
   259  0191                     	;# 
   260  0191                     	;# 
   261  0192                     	;# 
   262  0193                     	;# 
   263  0193                     	;# 
   264  0193                     	;# 
   265  0194                     	;# 
   266  0195                     	;# 
   267  0196                     	;# 
   268  0199                     	;# 
   269  019A                     	;# 
   270  019B                     	;# 
   271  019B                     	;# 
   272  019C                     	;# 
   273  019D                     	;# 
   274  019E                     	;# 
   275  019F                     	;# 
   276  020C                     	;# 
   277  020E                     	;# 
   278  0211                     	;# 
   279  0211                     	;# 
   280  0212                     	;# 
   281  0212                     	;# 
   282  0213                     	;# 
   283  0213                     	;# 
   284  0214                     	;# 
   285  0214                     	;# 
   286  0215                     	;# 
   287  0215                     	;# 
   288  0215                     	;# 
   289  0216                     	;# 
   290  0216                     	;# 
   291  0217                     	;# 
   292  0217                     	;# 
   293  0291                     	;# 
   294  0291                     	;# 
   295  0292                     	;# 
   296  0293                     	;# 
   297  0294                     	;# 
   298  0295                     	;# 
   299  0295                     	;# 
   300  0296                     	;# 
   301  0298                     	;# 
   302  0298                     	;# 
   303  0299                     	;# 
   304  029A                     	;# 
   305  029B                     	;# 
   306  029C                     	;# 
   307  029D                     	;# 
   308  029E                     	;# 
   309  0311                     	;# 
   310  0311                     	;# 
   311  0312                     	;# 
   312  0313                     	;# 
   313  0318                     	;# 
   314  0318                     	;# 
   315  0319                     	;# 
   316  031A                     	;# 
   317  038C                     	;# 
   318  038E                     	;# 
   319  0391                     	;# 
   320  0392                     	;# 
   321  0393                     	;# 
   322  039A                     	;# 
   323  039C                     	;# 
   324  039D                     	;# 
   325  039E                     	;# 
   326  039F                     	;# 
   327  0415                     	;# 
   328  0416                     	;# 
   329  0417                     	;# 
   330  041C                     	;# 
   331  041D                     	;# 
   332  041E                     	;# 
   333  0FE4                     	;# 
   334  0FE5                     	;# 
   335  0FE6                     	;# 
   336  0FE7                     	;# 
   337  0FE8                     	;# 
   338  0FE9                     	;# 
   339  0FEA                     	;# 
   340  0FEB                     	;# 
   341  0FED                     	;# 
   342  0FEE                     	;# 
   343  0FEF                     	;# 
   344  0000                     	;# 
   345  0001                     	;# 
   346  0002                     	;# 
   347  0003                     	;# 
   348  0004                     	;# 
   349  0005                     	;# 
   350  0006                     	;# 
   351  0007                     	;# 
   352  0008                     	;# 
   353  0009                     	;# 
   354  000A                     	;# 
   355  000B                     	;# 
   356  000C                     	;# 
   357  000E                     	;# 
   358  0011                     	;# 
   359  0012                     	;# 
   360  0013                     	;# 
   361  0015                     	;# 
   362  0016                     	;# 
   363  0016                     	;# 
   364  0017                     	;# 
   365  0018                     	;# 
   366  0019                     	;# 
   367  001A                     	;# 
   368  001B                     	;# 
   369  001C                     	;# 
   370  001E                     	;# 
   371  001F                     	;# 
   372  008C                     	;# 
   373  008E                     	;# 
   374  0091                     	;# 
   375  0092                     	;# 
   376  0093                     	;# 
   377  0095                     	;# 
   378  0096                     	;# 
   379  0097                     	;# 
   380  0098                     	;# 
   381  0099                     	;# 
   382  009A                     	;# 
   383  009B                     	;# 
   384  009B                     	;# 
   385  009C                     	;# 
   386  009D                     	;# 
   387  009E                     	;# 
   388  010C                     	;# 
   389  010E                     	;# 
   390  0111                     	;# 
   391  0112                     	;# 
   392  0113                     	;# 
   393  0114                     	;# 
   394  0115                     	;# 
   395  0116                     	;# 
   396  0117                     	;# 
   397  0118                     	;# 
   398  0119                     	;# 
   399  011A                     	;# 
   400  011B                     	;# 
   401  011D                     	;# 
   402  011E                     	;# 
   403  018C                     	;# 
   404  018E                     	;# 
   405  0191                     	;# 
   406  0191                     	;# 
   407  0192                     	;# 
   408  0193                     	;# 
   409  0193                     	;# 
   410  0193                     	;# 
   411  0194                     	;# 
   412  0195                     	;# 
   413  0196                     	;# 
   414  0199                     	;# 
   415  019A                     	;# 
   416  019B                     	;# 
   417  019B                     	;# 
   418  019C                     	;# 
   419  019D                     	;# 
   420  019E                     	;# 
   421  019F                     	;# 
   422  020C                     	;# 
   423  020E                     	;# 
   424  0211                     	;# 
   425  0211                     	;# 
   426  0212                     	;# 
   427  0212                     	;# 
   428  0213                     	;# 
   429  0213                     	;# 
   430  0214                     	;# 
   431  0214                     	;# 
   432  0215                     	;# 
   433  0215                     	;# 
   434  0215                     	;# 
   435  0216                     	;# 
   436  0216                     	;# 
   437  0217                     	;# 
   438  0217                     	;# 
   439  0291                     	;# 
   440  0291                     	;# 
   441  0292                     	;# 
   442  0293                     	;# 
   443  0294                     	;# 
   444  0295                     	;# 
   445  0295                     	;# 
   446  0296                     	;# 
   447  0298                     	;# 
   448  0298                     	;# 
   449  0299                     	;# 
   450  029A                     	;# 
   451  029B                     	;# 
   452  029C                     	;# 
   453  029D                     	;# 
   454  029E                     	;# 
   455  0311                     	;# 
   456  0311                     	;# 
   457  0312                     	;# 
   458  0313                     	;# 
   459  0318                     	;# 
   460  0318                     	;# 
   461  0319                     	;# 
   462  031A                     	;# 
   463  038C                     	;# 
   464  038E                     	;# 
   465  0391                     	;# 
   466  0392                     	;# 
   467  0393                     	;# 
   468  039A                     	;# 
   469  039C                     	;# 
   470  039D                     	;# 
   471  039E                     	;# 
   472  039F                     	;# 
   473  0415                     	;# 
   474  0416                     	;# 
   475  0417                     	;# 
   476  041C                     	;# 
   477  041D                     	;# 
   478  041E                     	;# 
   479  0FE4                     	;# 
   480  0FE5                     	;# 
   481  0FE6                     	;# 
   482  0FE7                     	;# 
   483  0FE8                     	;# 
   484  0FE9                     	;# 
   485  0FEA                     	;# 
   486  0FEB                     	;# 
   487  0FED                     	;# 
   488  0FEE                     	;# 
   489  0FEF                     	;# 
   490  0000                     	;# 
   491  0001                     	;# 
   492  0002                     	;# 
   493  0003                     	;# 
   494  0004                     	;# 
   495  0005                     	;# 
   496  0006                     	;# 
   497  0007                     	;# 
   498  0008                     	;# 
   499  0009                     	;# 
   500  000A                     	;# 
   501  000B                     	;# 
   502  000C                     	;# 
   503  000E                     	;# 
   504  0011                     	;# 
   505  0012                     	;# 
   506  0013                     	;# 
   507  0015                     	;# 
   508  0016                     	;# 
   509  0016                     	;# 
   510  0017                     	;# 
   511  0018                     	;# 
   512  0019                     	;# 
   513  001A                     	;# 
   514  001B                     	;# 
   515  001C                     	;# 
   516  001E                     	;# 
   517  001F                     	;# 
   518  008C                     	;# 
   519  008E                     	;# 
   520  0091                     	;# 
   521  0092                     	;# 
   522  0093                     	;# 
   523  0095                     	;# 
   524  0096                     	;# 
   525  0097                     	;# 
   526  0098                     	;# 
   527  0099                     	;# 
   528  009A                     	;# 
   529  009B                     	;# 
   530  009B                     	;# 
   531  009C                     	;# 
   532  009D                     	;# 
   533  009E                     	;# 
   534  010C                     	;# 
   535  010E                     	;# 
   536  0111                     	;# 
   537  0112                     	;# 
   538  0113                     	;# 
   539  0114                     	;# 
   540  0115                     	;# 
   541  0116                     	;# 
   542  0117                     	;# 
   543  0118                     	;# 
   544  0119                     	;# 
   545  011A                     	;# 
   546  011B                     	;# 
   547  011D                     	;# 
   548  011E                     	;# 
   549  018C                     	;# 
   550  018E                     	;# 
   551  0191                     	;# 
   552  0191                     	;# 
   553  0192                     	;# 
   554  0193                     	;# 
   555  0193                     	;# 
   556  0193                     	;# 
   557  0194                     	;# 
   558  0195                     	;# 
   559  0196                     	;# 
   560  0199                     	;# 
   561  019A                     	;# 
   562  019B                     	;# 
   563  019B                     	;# 
   564  019C                     	;# 
   565  019D                     	;# 
   566  019E                     	;# 
   567  019F                     	;# 
   568  020C                     	;# 
   569  020E                     	;# 
   570  0211                     	;# 
   571  0211                     	;# 
   572  0212                     	;# 
   573  0212                     	;# 
   574  0213                     	;# 
   575  0213                     	;# 
   576  0214                     	;# 
   577  0214                     	;# 
   578  0215                     	;# 
   579  0215                     	;# 
   580  0215                     	;# 
   581  0216                     	;# 
   582  0216                     	;# 
   583  0217                     	;# 
   584  0217                     	;# 
   585  0291                     	;# 
   586  0291                     	;# 
   587  0292                     	;# 
   588  0293                     	;# 
   589  0294                     	;# 
   590  0295                     	;# 
   591  0295                     	;# 
   592  0296                     	;# 
   593  0298                     	;# 
   594  0298                     	;# 
   595  0299                     	;# 
   596  029A                     	;# 
   597  029B                     	;# 
   598  029C                     	;# 
   599  029D                     	;# 
   600  029E                     	;# 
   601  0311                     	;# 
   602  0311                     	;# 
   603  0312                     	;# 
   604  0313                     	;# 
   605  0318                     	;# 
   606  0318                     	;# 
   607  0319                     	;# 
   608  031A                     	;# 
   609  038C                     	;# 
   610  038E                     	;# 
   611  0391                     	;# 
   612  0392                     	;# 
   613  0393                     	;# 
   614  039A                     	;# 
   615  039C                     	;# 
   616  039D                     	;# 
   617  039E                     	;# 
   618  039F                     	;# 
   619  0415                     	;# 
   620  0416                     	;# 
   621  0417                     	;# 
   622  041C                     	;# 
   623  041D                     	;# 
   624  041E                     	;# 
   625  0FE4                     	;# 
   626  0FE5                     	;# 
   627  0FE6                     	;# 
   628  0FE7                     	;# 
   629  0FE8                     	;# 
   630  0FE9                     	;# 
   631  0FEA                     	;# 
   632  0FEB                     	;# 
   633  0FED                     	;# 
   634  0FEE                     	;# 
   635  0FEF                     	;# 
   636  0011                     _PIR1bits	set	17
   637  000E                     _PORTC	set	14
   638  000C                     _PORTA	set	12
   639  000E                     _PORTCbits	set	14
   640  000B                     _INTCONbits	set	11
   641  008D                     _RCIF	set	141
   642  0091                     _PIE1bits	set	145
   643  008C                     _TRISAbits	set	140
   644  0095                     _OPTION_REGbits	set	149
   645  008E                     _TRISC	set	142
   646  008C                     _TRISA	set	140
   647  0099                     _OSCCONbits	set	153
   648  008E                     _TRISCbits	set	142
   649  011D                     _APFCON0bits	set	285
   650  010E                     _LATC	set	270
   651  010C                     _LATA	set	268
   652  010E                     _LATCbits	set	270
   653  019B                     _SPBRG	set	411
   654  019A                     _TXREG	set	410
   655  019D                     _RCSTAbits	set	413
   656  019F                     _BAUDCONbits	set	415
   657  019E                     _TXSTAbits	set	414
   658  018E                     _ANSELC	set	398
   659  018C                     _ANSELA	set	396
   660  0199                     _RCREG	set	409
   661  020C                     _WPUAbits	set	524
   662                           
   663                           ; #config settings
   664  0000                     
   665                           	psect	cinit
   666  0022                     start_initialization:	
   667  0022                     __initialization:	
   668                           
   669                           ; Clear objects allocated to COMMON
   670  0022  01FA               	clrf	__pbssCOMMON& (0+127)
   671  0023  01FB               	clrf	(__pbssCOMMON+1)& (0+127)
   672                           
   673                           ; Clear objects allocated to BANK0
   674  0024  3020               	movlw	low __pbssBANK0
   675  0025  0084               	movwf	4
   676  0026  3000               	movlw	high __pbssBANK0
   677  0027  0085               	movwf	5
   678  0028  300B               	movlw	11
   679  0029  3181  21C4  3180   	fcall	clear_ram0
   680                           
   681                           ; Clear objects allocated to BANK1
   682  002C  30A0               	movlw	low __pbssBANK1
   683  002D  0084               	movwf	4
   684  002E  3000               	movlw	high __pbssBANK1
   685  002F  0085               	movwf	5
   686  0030  3040               	movlw	64
   687  0031  3181  21C4         	fcall	clear_ram0
   688  0033                     end_of_initialization:	
   689                           ;End of C runtime variable initialization code
   690                           
   691  0033                     __end_of__initialization:	
   692  0033  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
   693  0034  0020               	movlb	0
   694  0035  3180  2837         	ljmp	_main	;jump to C main() function
   695                           
   696                           	psect	bssCOMMON
   697  007A                     __pbssCOMMON:	
   698  007A                     _UQEnd:	
   699  007A                     	ds	1
   700  007B                     _UQFront:	
   701  007B                     	ds	1
   702                           
   703                           	psect	bssBANK0
   704  0020                     __pbssBANK0:	
   705  0020                     USARTWriteInt@F2384:	
   706  0020                     	ds	5
   707  0025                     _new_rx:	
   708  0025                     	ds	2
   709  0027                     _rx_ser:	
   710  0027                     	ds	2
   711  0029                     _clk_low:	
   712  0029                     	ds	2
   713                           
   714                           	psect	bssBANK1
   715  00A0                     __pbssBANK1:	
   716  00A0                     _URBuff:	
   717  00A0                     	ds	64
   718                           
   719                           	psect	clrtext
   720  01C4                     clear_ram0:	
   721                           ;	Called with FSR0 containing the base address, and
   722                           ;	WREG with the size to clear
   723                           
   724  01C4  0064               	clrwdt	;clear the watchdog before getting into this loop
   725  01C5                     clrloop0:	
   726  01C5  0180               	clrf	0	;clear RAM location pointed to by FSR
   727  01C6  3101               	addfsr 0,1
   728  01C7  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
   729  01C8  29C5               	goto	clrloop0	;have we reached the end yet?
   730  01C9  3400               	retlw	0	;all done for this memory range, return
   731                           
   732                           	psect	cstackCOMMON
   733  0070                     __pcstackCOMMON:	
   734  0070                     ?_config:	
   735  0070                     ?_int0:	
   736                           ; 1 bytes @ 0x0
   737                           
   738  0070                     ??_int0:	
   739                           ; 1 bytes @ 0x0
   740                           
   741  0070                     ?_main:	
   742                           ; 1 bytes @ 0x0
   743                           
   744                           
   745                           ; 1 bytes @ 0x0
   746  0070                     	ds	2
   747  0072                     ?_USARTInit:	
   748  0072                     ?_send_data:	
   749                           ; 1 bytes @ 0x2
   750                           
   751  0072                     USARTInit@baud_rate:	
   752                           ; 1 bytes @ 0x2
   753                           
   754  0072                     send_data@data:	
   755                           ; 2 bytes @ 0x2
   756                           
   757                           
   758                           ; 4 bytes @ 0x2
   759  0072                     	ds	2
   760  0074                     ??_USARTInit:	
   761                           
   762                           ; 1 bytes @ 0x4
   763  0074                     	ds	1
   764  0075                     ??_config:	
   765                           
   766                           ; 1 bytes @ 0x5
   767  0075                     	ds	1
   768  0076                     ??_send_data:	
   769                           
   770                           ; 1 bytes @ 0x6
   771  0076                     	ds	4
   772                           
   773                           	psect	cstackBANK0
   774  002B                     __pcstackBANK0:	
   775  002B                     send_data@temp:	
   776                           
   777                           ; 4 bytes @ 0x0
   778  002B                     	ds	4
   779  002F                     send_data@i:	
   780                           
   781                           ; 2 bytes @ 0x4
   782  002F                     	ds	2
   783  0031                     ??_main:	
   784                           
   785                           ; 1 bytes @ 0x6
   786  0031                     	ds	2
   787                           
   788                           	psect	maintext
   789  0037                     __pmaintext:	
   790 ;;
   791 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   792 ;;
   793 ;; *************** function _main *****************
   794 ;; Defined at:
   795 ;;		line 84 in file "main.c"
   796 ;; Parameters:    Size  Location     Type
   797 ;;		None
   798 ;; Auto vars:     Size  Location     Type
   799 ;;		None
   800 ;; Return value:  Size  Location     Type
   801 ;;                  1    wreg      void 
   802 ;; Registers used:
   803 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   804 ;; Tracked objects:
   805 ;;		On entry : B1F/0
   806 ;;		On exit  : 0/0
   807 ;;		Unchanged: 0/0
   808 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   809 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   810 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   811 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
   812 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
   813 ;;Total ram usage:        2 bytes
   814 ;; Hardware stack levels required when called:    3
   815 ;; This function calls:
   816 ;;		_config
   817 ;;		_send_data
   818 ;; This function is called by:
   819 ;;		Startup code after reset
   820 ;; This function uses a non-reentrant model
   821 ;;
   822                           
   823                           
   824                           ;psect for function _main
   825  0037                     _main:	
   826                           
   827                           ;main.c: 86:     config();
   828                           
   829                           ;incstack = 0
   830                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   831  0037  3181  2192  3180   	fcall	_config
   832                           
   833                           ;main.c: 88:     send_data(0x0C0);
   834  003A  3000               	movlw	0
   835  003B  00F5               	movwf	send_data@data+3
   836  003C  3000               	movlw	0
   837  003D  00F4               	movwf	send_data@data+2
   838  003E  3000               	movlw	0
   839  003F  00F3               	movwf	send_data@data+1
   840  0040  30C0               	movlw	192
   841  0041  00F2               	movwf	send_data@data
   842  0042  3180  20E0  3180   	fcall	_send_data
   843                           
   844                           ;main.c: 89:     send_data(0x0B0);
   845  0045  3000               	movlw	0
   846  0046  00F5               	movwf	send_data@data+3
   847  0047  3000               	movlw	0
   848  0048  00F4               	movwf	send_data@data+2
   849  0049  3000               	movlw	0
   850  004A  00F3               	movwf	send_data@data+1
   851  004B  30B0               	movlw	176
   852  004C  00F2               	movwf	send_data@data
   853  004D  3180  20E0  3180   	fcall	_send_data
   854                           
   855                           ;main.c: 90:     send_data(0x0A0);
   856  0050  3000               	movlw	0
   857  0051  00F5               	movwf	send_data@data+3
   858  0052  3000               	movlw	0
   859  0053  00F4               	movwf	send_data@data+2
   860  0054  3000               	movlw	0
   861  0055  00F3               	movwf	send_data@data+1
   862  0056  30A0               	movlw	160
   863  0057  00F2               	movwf	send_data@data
   864  0058  3180  20E0  3180   	fcall	_send_data
   865                           
   866                           ;main.c: 92:     send_data(0x084);
   867  005B  3000               	movlw	0
   868  005C  00F5               	movwf	send_data@data+3
   869  005D  3000               	movlw	0
   870  005E  00F4               	movwf	send_data@data+2
   871  005F  3000               	movlw	0
   872  0060  00F3               	movwf	send_data@data+1
   873  0061  3084               	movlw	132
   874  0062  00F2               	movwf	send_data@data
   875  0063  3180  20E0  3180   	fcall	_send_data
   876                           
   877                           ;main.c: 93:     _delay((unsigned long)((1000)*(8000000/4000.0)));
   878  0066  300B               	movlw	11
   879  0067  0020               	movlb	0	; select bank0
   880  0068  00B2               	movwf	??_main+1
   881  0069  3026               	movlw	38
   882  006A  00B1               	movwf	??_main
   883  006B  305D               	movlw	93
   884  006C                     u627:	
   885  006C  0B89               	decfsz	9,f
   886  006D  286C               	goto	u627
   887  006E  0BB1               	decfsz	??_main,f
   888  006F  286C               	goto	u627
   889  0070  0BB2               	decfsz	??_main+1,f
   890  0071  286C               	goto	u627
   891  0072  3200               	nop2
   892                           
   893                           ;main.c: 94:     send_data(0x009);
   894  0073  3000               	movlw	0
   895  0074  00F5               	movwf	send_data@data+3
   896  0075  3000               	movlw	0
   897  0076  00F4               	movwf	send_data@data+2
   898  0077  3000               	movlw	0
   899  0078  00F3               	movwf	send_data@data+1
   900  0079  3009               	movlw	9
   901  007A  00F2               	movwf	send_data@data
   902  007B  3180  20E0  3180   	fcall	_send_data
   903                           
   904                           ;main.c: 95:     _delay((unsigned long)((2000)*(8000000/4000.0)));
   905  007E  3015               	movlw	21
   906  007F  0020               	movlb	0	; select bank0
   907  0080  00B2               	movwf	??_main+1
   908  0081  304B               	movlw	75
   909  0082  00B1               	movwf	??_main
   910  0083  30BE               	movlw	190
   911  0084                     u637:	
   912  0084  0B89               	decfsz	9,f
   913  0085  2884               	goto	u637
   914  0086  0BB1               	decfsz	??_main,f
   915  0087  2884               	goto	u637
   916  0088  0BB2               	decfsz	??_main+1,f
   917  0089  2884               	goto	u637
   918  008A  0000               	nop
   919                           
   920                           ;main.c: 96:     send_data(0x085);
   921  008B  3000               	movlw	0
   922  008C  00F5               	movwf	send_data@data+3
   923  008D  3000               	movlw	0
   924  008E  00F4               	movwf	send_data@data+2
   925  008F  3000               	movlw	0
   926  0090  00F3               	movwf	send_data@data+1
   927  0091  3085               	movlw	133
   928  0092  00F2               	movwf	send_data@data
   929  0093  3180  20E0  3180   	fcall	_send_data
   930                           
   931                           ;main.c: 98:     _delay((unsigned long)((5000)*(8000000/4000.0)));
   932  0096  3033               	movlw	51
   933  0097  0020               	movlb	0	; select bank0
   934  0098  00B2               	movwf	??_main+1
   935  0099  30BB               	movlw	187
   936  009A  00B1               	movwf	??_main
   937  009B  30DF               	movlw	223
   938  009C                     u647:	
   939  009C  0B89               	decfsz	9,f
   940  009D  289C               	goto	u647
   941  009E  0BB1               	decfsz	??_main,f
   942  009F  289C               	goto	u647
   943  00A0  0BB2               	decfsz	??_main+1,f
   944  00A1  289C               	goto	u647
   945  00A2  3200               	nop2
   946  00A3                     l1465:	
   947                           
   948                           ;main.c: 110:         if(PORTCbits.RC1 == 0){
   949  00A3  0020               	movlb	0	; select bank0
   950  00A4  188E               	btfsc	14,1	;volatile
   951  00A5  28CB               	goto	l1473
   952                           
   953                           ;main.c: 115:         _delay((unsigned long)((100)*(8000000/4000.0)));
   954  00A6  3002               	movlw	2
   955  00A7  0020               	movlb	0	; select bank0
   956  00A8  00B2               	movwf	??_main+1
   957  00A9  3004               	movlw	4
   958  00AA  00B1               	movwf	??_main
   959  00AB  30BA               	movlw	186
   960  00AC                     u657:	
   961  00AC  0B89               	decfsz	9,f
   962  00AD  28AC               	goto	u657
   963  00AE  0BB1               	decfsz	??_main,f
   964  00AF  28AC               	goto	u657
   965  00B0  0BB2               	decfsz	??_main+1,f
   966  00B1  28AC               	goto	u657
   967  00B2  0000               	nop
   968                           
   969                           ;main.c: 117:         send_data(0x004);
   970  00B3  3000               	movlw	0
   971  00B4  00F5               	movwf	send_data@data+3
   972  00B5  3000               	movlw	0
   973  00B6  00F4               	movwf	send_data@data+2
   974  00B7  3000               	movlw	0
   975  00B8  00F3               	movwf	send_data@data+1
   976  00B9  3004               	movlw	4
   977  00BA  00F2               	movwf	send_data@data
   978  00BB  3180  20E0  3180   	fcall	_send_data
   979                           
   980                           ;main.c: 118:         _delay((unsigned long)((100)*(8000000/4000.0)));
   981  00BE  3002               	movlw	2
   982  00BF  0020               	movlb	0	; select bank0
   983  00C0  00B2               	movwf	??_main+1
   984  00C1  3004               	movlw	4
   985  00C2  00B1               	movwf	??_main
   986  00C3  30BA               	movlw	186
   987  00C4                     u667:	
   988  00C4  0B89               	decfsz	9,f
   989  00C5  28C4               	goto	u667
   990  00C6  0BB1               	decfsz	??_main,f
   991  00C7  28C4               	goto	u667
   992  00C8  0BB2               	decfsz	??_main+1,f
   993  00C9  28C4               	goto	u667
   994  00CA  0000               	nop
   995  00CB                     l1473:	
   996                           
   997                           ;main.c: 127:        if(new_rx == 1){
   998  00CB  0020               	movlb	0	; select bank0
   999  00CC  0325               	decf	_new_rx,w
  1000  00CD  0426               	iorwf	_new_rx+1,w
  1001  00CE  1D03               	btfss	3,2
  1002  00CF  28A3               	goto	l1465
  1003                           
  1004                           ;main.c: 129:             send_data(rx_ser);
  1005  00D0  0827               	movf	_rx_ser,w
  1006  00D1  00F2               	movwf	send_data@data
  1007  00D2  0828               	movf	_rx_ser+1,w
  1008  00D3  00F3               	movwf	send_data@data+1
  1009  00D4  0D89               	rlf	9,f
  1010  00D5  3B89               	subwfb	9,f
  1011  00D6  0989               	comf	9,f
  1012  00D7  00F4               	movwf	send_data@data+2
  1013  00D8  00F5               	movwf	send_data@data+3
  1014  00D9  3180  20E0  3180   	fcall	_send_data
  1015                           
  1016                           ;main.c: 131:             new_rx = 0;
  1017  00DC  0020               	movlb	0	; select bank0
  1018  00DD  01A5               	clrf	_new_rx
  1019  00DE  01A6               	clrf	_new_rx+1
  1020  00DF  28A3               	goto	l1465
  1021  00E0                     __end_of_main:	
  1022                           
  1023                           	psect	text1
  1024  00E0                     __ptext1:	
  1025 ;; *************** function _send_data *****************
  1026 ;; Defined at:
  1027 ;;		line 29 in file "main.c"
  1028 ;; Parameters:    Size  Location     Type
  1029 ;;  data            4    2[COMMON] long 
  1030 ;; Auto vars:     Size  Location     Type
  1031 ;;  temp            4    0[BANK0 ] long 
  1032 ;;  i               2    4[BANK0 ] int 
  1033 ;; Return value:  Size  Location     Type
  1034 ;;                  1    wreg      void 
  1035 ;; Registers used:
  1036 ;;		wreg, status,2, status,0
  1037 ;; Tracked objects:
  1038 ;;		On entry : 0/0
  1039 ;;		On exit  : 0/0
  1040 ;;		Unchanged: 0/0
  1041 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1042 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1043 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1044 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1045 ;;      Totals:         8       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1046 ;;Total ram usage:       14 bytes
  1047 ;; Hardware stack levels used:    1
  1048 ;; Hardware stack levels required when called:    1
  1049 ;; This function calls:
  1050 ;;		Nothing
  1051 ;; This function is called by:
  1052 ;;		_main
  1053 ;; This function uses a non-reentrant model
  1054 ;;
  1055                           
  1056                           
  1057                           ;psect for function _send_data
  1058  00E0                     _send_data:	
  1059                           
  1060                           ;main.c: 29: void send_data(long int data );main.c: 30: {;main.c: 31:     TRISCbits.TRIS
      +                          C0 = 0;
  1061                           
  1062                           ;incstack = 0
  1063                           ; Regs used in _send_data: [wreg+status,2+status,0]
  1064  00E0  0021               	movlb	1	; select bank1
  1065  00E1  100E               	bcf	14,0	;volatile
  1066                           
  1067                           ;main.c: 34:     INTCONbits.INTE =1;
  1068  00E2  160B               	bsf	11,4	;volatile
  1069                           
  1070                           ;main.c: 35:     LATCbits.LATC0 = 0;
  1071  00E3  0022               	movlb	2	; select bank2
  1072  00E4  100E               	bcf	14,0	;volatile
  1073                           
  1074                           ;main.c: 37:     _delay((unsigned long)((2)*(8000000/4000.0)));
  1075  00E5  3006               	movlw	6
  1076  00E6  00F6               	movwf	??_send_data
  1077  00E7  3030               	movlw	48
  1078  00E8                     u677:	
  1079  00E8  0B89               	decfsz	9,f
  1080  00E9  28E8               	goto	u677
  1081  00EA  0BF6               	decfsz	??_send_data,f
  1082  00EB  28E8               	goto	u677
  1083  00EC  3200               	nop2
  1084                           
  1085                           ;main.c: 39:     for(i=0;i<11;i++)
  1086  00ED  0020               	movlb	0	; select bank0
  1087  00EE  01AF               	clrf	send_data@i
  1088  00EF  01B0               	clrf	send_data@i+1
  1089  00F0                     l1121:	
  1090  00F0  0020               	movlb	0	; select bank0
  1091  00F1  0829               	movf	_clk_low,w
  1092  00F2  042A               	iorwf	_clk_low+1,w
  1093  00F3  1903               	btfsc	3,2
  1094  00F4  28F0               	goto	l1121
  1095                           
  1096                           ;main.c: 43:         if(i == 10)
  1097  00F5  300A               	movlw	10
  1098  00F6  062F               	xorwf	send_data@i,w
  1099  00F7  0430               	iorwf	send_data@i+1,w
  1100  00F8  1D03               	btfss	3,2
  1101  00F9  28FD               	goto	l1127
  1102                           
  1103                           ;main.c: 44:         {;main.c: 45:             LATCbits.LATC0 = 1;
  1104  00FA  0022               	movlb	2	; select bank2
  1105  00FB  140E               	bsf	14,0	;volatile
  1106                           
  1107                           ;main.c: 46:         }
  1108  00FC  2929               	goto	l1133
  1109  00FD                     l1127:	
  1110                           
  1111                           ;main.c: 48:             temp = (data >> (9-i)) & 0x01;
  1112  00FD  0872               	movf	send_data@data,w
  1113  00FE  00F6               	movwf	??_send_data
  1114  00FF  0873               	movf	send_data@data+1,w
  1115  0100  00F7               	movwf	??_send_data+1
  1116  0101  0874               	movf	send_data@data+2,w
  1117  0102  00F8               	movwf	??_send_data+2
  1118  0103  0875               	movf	send_data@data+3,w
  1119  0104  00F9               	movwf	??_send_data+3
  1120  0105  082F               	movf	send_data@i,w
  1121  0106  3C09               	sublw	9
  1122  0107  0A89               	incf	9,f
  1123  0108  290D               	goto	u240
  1124  0109                     u245:	
  1125  0109  37F9               	asrf	??_send_data+3,f
  1126  010A  0CF8               	rrf	??_send_data+2,f
  1127  010B  0CF7               	rrf	??_send_data+1,f
  1128  010C  0CF6               	rrf	??_send_data,f
  1129  010D                     u240:	
  1130  010D  0B89               	decfsz	9,f
  1131  010E  2909               	goto	u245
  1132  010F  3001               	movlw	1
  1133  0110  0576               	andwf	??_send_data,w
  1134  0111  00AB               	movwf	send_data@temp
  1135  0112  3000               	movlw	0
  1136  0113  0577               	andwf	??_send_data+1,w
  1137  0114  00AC               	movwf	send_data@temp+1
  1138  0115  3000               	movlw	0
  1139  0116  0578               	andwf	??_send_data+2,w
  1140  0117  00AD               	movwf	send_data@temp+2
  1141  0118  3000               	movlw	0
  1142  0119  0579               	andwf	??_send_data+3,w
  1143  011A  00AE               	movwf	send_data@temp+3
  1144                           
  1145                           ;main.c: 49:             if(temp == 1)
  1146  011B  032B               	decf	send_data@temp,w
  1147  011C  042C               	iorwf	send_data@temp+1,w
  1148  011D  042D               	iorwf	send_data@temp+2,w
  1149  011E  042E               	iorwf	send_data@temp+3,w
  1150  011F  1D03               	btfss	3,2
  1151  0120  2924               	goto	l32
  1152                           
  1153                           ;main.c: 50:             {;main.c: 51:                 LATCbits.LATC0 = 1;
  1154  0121  0022               	movlb	2	; select bank2
  1155  0122  140E               	bsf	14,0	;volatile
  1156                           
  1157                           ;main.c: 52:             }
  1158  0123  2926               	goto	l1131
  1159  0124                     l32:	
  1160                           ;main.c: 53:             else{
  1161                           
  1162                           
  1163                           ;main.c: 54:                 LATCbits.LATC0 = 0;
  1164  0124  0022               	movlb	2	; select bank2
  1165  0125  100E               	bcf	14,0	;volatile
  1166  0126                     l1131:	
  1167                           
  1168                           ;main.c: 57:             clk_low = 0;
  1169  0126  0020               	movlb	0	; select bank0
  1170  0127  01A9               	clrf	_clk_low
  1171  0128  01AA               	clrf	_clk_low+1
  1172  0129                     l1133:	
  1173                           
  1174                           ;main.c: 60:     }
  1175  0129  3001               	movlw	1
  1176  012A  0020               	movlb	0	; select bank0
  1177  012B  07AF               	addwf	send_data@i,f
  1178  012C  3000               	movlw	0
  1179  012D  3DB0               	addwfc	send_data@i+1,f
  1180  012E  0830               	movf	send_data@i+1,w
  1181  012F  3A80               	xorlw	128
  1182  0130  00F6               	movwf	??_send_data
  1183  0131  3080               	movlw	128
  1184  0132  0276               	subwf	??_send_data,w
  1185  0133  1D03               	skipz
  1186  0134  2937               	goto	u265
  1187  0135  300B               	movlw	11
  1188  0136  022F               	subwf	send_data@i,w
  1189  0137                     u265:	
  1190  0137  1C03               	skipc
  1191  0138  28F0               	goto	l1121
  1192                           
  1193                           ;main.c: 62:     clk_low = 0;
  1194  0139  0020               	movlb	0	; select bank0
  1195  013A  01A9               	clrf	_clk_low
  1196  013B  01AA               	clrf	_clk_low+1
  1197                           
  1198                           ;main.c: 63:     INTCONbits.INTE = 0;
  1199  013C  120B               	bcf	11,4	;volatile
  1200                           
  1201                           ;main.c: 64:     LATCbits.LATC0 = 1;
  1202  013D  0022               	movlb	2	; select bank2
  1203  013E  140E               	bsf	14,0	;volatile
  1204                           
  1205                           ;main.c: 66:     TRISCbits.TRISC0 = 1;
  1206  013F  0021               	movlb	1	; select bank1
  1207  0140  140E               	bsf	14,0	;volatile
  1208  0141  0008               	return
  1209  0142                     __end_of_send_data:	
  1210                           
  1211                           	psect	text2
  1212  0192                     __ptext2:	
  1213 ;; *************** function _config *****************
  1214 ;; Defined at:
  1215 ;;		line 17 in file "config.c"
  1216 ;; Parameters:    Size  Location     Type
  1217 ;;		None
  1218 ;; Auto vars:     Size  Location     Type
  1219 ;;		None
  1220 ;; Return value:  Size  Location     Type
  1221 ;;                  1    wreg      void 
  1222 ;; Registers used:
  1223 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1224 ;; Tracked objects:
  1225 ;;		On entry : 0/0
  1226 ;;		On exit  : 0/0
  1227 ;;		Unchanged: 0/0
  1228 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1229 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1230 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1231 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1232 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1233 ;;Total ram usage:        2 bytes
  1234 ;; Hardware stack levels used:    1
  1235 ;; Hardware stack levels required when called:    2
  1236 ;; This function calls:
  1237 ;;		_USARTInit
  1238 ;; This function is called by:
  1239 ;;		_main
  1240 ;; This function uses a non-reentrant model
  1241 ;;
  1242                           
  1243                           
  1244                           ;psect for function _config
  1245  0192                     _config:	
  1246                           
  1247                           ;config.c: 20:     LATCbits.LATC0=1;
  1248                           
  1249                           ;incstack = 0
  1250                           ; Regs used in _config: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1251  0192  0022               	movlb	2	; select bank2
  1252  0193  140E               	bsf	14,0	;volatile
  1253                           
  1254                           ;config.c: 22:     OSCCONbits.IRCF0=0;
  1255  0194  0021               	movlb	1	; select bank1
  1256  0195  1199               	bcf	25,3	;volatile
  1257                           
  1258                           ;config.c: 23:     OSCCONbits.IRCF1=1;
  1259  0196  1619               	bsf	25,4	;volatile
  1260                           
  1261                           ;config.c: 24:     OSCCONbits.IRCF2=1;
  1262  0197  1699               	bsf	25,5	;volatile
  1263                           
  1264                           ;config.c: 25:     OSCCONbits.IRCF3=1;
  1265  0198  1719               	bsf	25,6	;volatile
  1266                           
  1267                           ;config.c: 27:     INTCONbits.GIE=0;
  1268  0199  138B               	bcf	11,7	;volatile
  1269                           
  1270                           ;config.c: 29:     ANSELA=0X00;
  1271  019A  0023               	movlb	3	; select bank3
  1272  019B  018C               	clrf	12	;volatile
  1273                           
  1274                           ;config.c: 30:     ANSELC=0X00;
  1275  019C  018E               	clrf	14	;volatile
  1276                           
  1277                           ;config.c: 31:     TRISA=0X00;
  1278  019D  0021               	movlb	1	; select bank1
  1279  019E  018C               	clrf	12	;volatile
  1280                           
  1281                           ;config.c: 32:     TRISC=0X00;
  1282  019F  018E               	clrf	14	;volatile
  1283                           
  1284                           ;config.c: 33:     PORTA=0X00;
  1285  01A0  0020               	movlb	0	; select bank0
  1286  01A1  018C               	clrf	12	;volatile
  1287                           
  1288                           ;config.c: 34:     PORTC=0X00;
  1289  01A2  018E               	clrf	14	;volatile
  1290                           
  1291                           ;config.c: 35:     LATA=0X00;
  1292  01A3  0022               	movlb	2	; select bank2
  1293  01A4  018C               	clrf	12	;volatile
  1294                           
  1295                           ;config.c: 36:     LATC=0X00;
  1296  01A5  018E               	clrf	14	;volatile
  1297                           
  1298                           ;config.c: 38:     LATCbits.LATC0=1;
  1299  01A6  140E               	bsf	14,0	;volatile
  1300                           
  1301                           ;config.c: 39:     OPTION_REGbits.nWPUEN=0;
  1302  01A7  0021               	movlb	1	; select bank1
  1303  01A8  1395               	bcf	21,7	;volatile
  1304                           
  1305                           ;config.c: 40:     WPUAbits.WPUA2=1;
  1306  01A9  0024               	movlb	4	; select bank4
  1307  01AA  150C               	bsf	12,2	;volatile
  1308                           
  1309                           ;config.c: 42:     TRISAbits.TRISA2 = 1;
  1310  01AB  0021               	movlb	1	; select bank1
  1311  01AC  150C               	bsf	12,2	;volatile
  1312                           
  1313                           ;config.c: 43:     TRISCbits.TRISC1 = 1;
  1314  01AD  148E               	bsf	14,1	;volatile
  1315                           
  1316                           ;config.c: 44:     OPTION_REGbits.INTEDG = 1;
  1317  01AE  1715               	bsf	21,6	;volatile
  1318                           
  1319                           ;config.c: 45:     _delay((unsigned long)((1000)*(8000000/4000.0)));
  1320  01AF  300B               	movlw	11
  1321  01B0  00F6               	movwf	??_config+1
  1322  01B1  3026               	movlw	38
  1323  01B2  00F5               	movwf	??_config
  1324  01B3  305E               	movlw	94
  1325  01B4                     u687:	
  1326  01B4  0B89               	decfsz	9,f
  1327  01B5  29B4               	goto	u687
  1328  01B6  0BF5               	decfsz	??_config,f
  1329  01B7  29B4               	goto	u687
  1330  01B8  0BF6               	decfsz	??_config+1,f
  1331  01B9  29B4               	goto	u687
  1332                           
  1333                           ;config.c: 47:     INTCONbits.GIE = 1;
  1334  01BA  178B               	bsf	11,7	;volatile
  1335                           
  1336                           ;config.c: 48:     INTCONbits.INTE = 1;
  1337  01BB  160B               	bsf	11,4	;volatile
  1338                           
  1339                           ;config.c: 49:     INTCONbits.PEIE = 1;
  1340  01BC  170B               	bsf	11,6	;volatile
  1341                           
  1342                           ;config.c: 53:     USARTInit(9600);
  1343  01BD  3080               	movlw	128
  1344  01BE  00F2               	movwf	USARTInit@baud_rate
  1345  01BF  3025               	movlw	37
  1346  01C0  00F3               	movwf	USARTInit@baud_rate+1
  1347  01C1  3181  2142         	fcall	_USARTInit
  1348  01C3  0008               	return
  1349  01C4                     __end_of_config:	
  1350                           
  1351                           	psect	text3
  1352  0142                     __ptext3:	
  1353 ;; *************** function _USARTInit *****************
  1354 ;; Defined at:
  1355 ;;		line 31 in file "usart_pic16.c"
  1356 ;; Parameters:    Size  Location     Type
  1357 ;;  baud_rate       2    2[COMMON] unsigned short 
  1358 ;; Auto vars:     Size  Location     Type
  1359 ;;		None
  1360 ;; Return value:  Size  Location     Type
  1361 ;;                  1    wreg      void 
  1362 ;; Registers used:
  1363 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1364 ;; Tracked objects:
  1365 ;;		On entry : 0/0
  1366 ;;		On exit  : 0/0
  1367 ;;		Unchanged: 0/0
  1368 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1369 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1370 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1371 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1372 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1373 ;;Total ram usage:        3 bytes
  1374 ;; Hardware stack levels used:    1
  1375 ;; Hardware stack levels required when called:    1
  1376 ;; This function calls:
  1377 ;;		Nothing
  1378 ;; This function is called by:
  1379 ;;		_config
  1380 ;; This function uses a non-reentrant model
  1381 ;;
  1382                           
  1383                           
  1384                           ;psect for function _USARTInit
  1385  0142                     _USARTInit:	
  1386                           
  1387                           ;usart_pic16.c: 31: void USARTInit(uint16_t baud_rate);usart_pic16.c: 32: {;usart_pic16.
      +                          c: 33:     APFCON0bits.RXDTSEL = 0;
  1388                           
  1389                           ;incstack = 0
  1390                           ; Regs used in _USARTInit: [wreg-fsr0h+status,2+status,0]
  1391  0142  0022               	movlb	2	; select bank2
  1392  0143  139D               	bcf	29,7	;volatile
  1393                           
  1394                           ;usart_pic16.c: 34:     APFCON0bits.TXCKSEL = 0;
  1395  0144  111D               	bcf	29,2	;volatile
  1396                           
  1397                           ;usart_pic16.c: 36:     TRISCbits.TRISC4 = 0;
  1398  0145  0021               	movlb	1	; select bank1
  1399  0146  120E               	bcf	14,4	;volatile
  1400                           
  1401                           ;usart_pic16.c: 37:     TRISCbits.TRISC5 = 1;
  1402  0147  168E               	bsf	14,5	;volatile
  1403                           
  1404                           ;usart_pic16.c: 39:     UQFront=UQEnd=-1;
  1405  0148  30FF               	movlw	255
  1406  0149  00FA               	movwf	_UQEnd	;volatile
  1407  014A  00F4               	movwf	??_USARTInit
  1408  014B  0874               	movf	??_USARTInit,w
  1409  014C  00FB               	movwf	_UQFront	;volatile
  1410                           
  1411                           ;usart_pic16.c: 42:     switch(baud_rate)
  1412  014D  2963               	goto	l1087
  1413  014E                     l126:	
  1414                           ;usart_pic16.c: 43:     {;usart_pic16.c: 44:      case 9600:
  1415                           
  1416                           
  1417                           ;usart_pic16.c: 45:         SPBRG=12;
  1418  014E  3000               	movlw	0
  1419  014F  0023               	movlb	3	; select bank3
  1420  0150  009C               	movwf	28	;volatile
  1421  0151  300C               	movlw	12
  1422  0152  2961               	goto	L3
  1423  0153                     l128:	
  1424                           ;usart_pic16.c: 47:      case 19200:
  1425                           
  1426                           ;usart_pic16.c: 46:         break;
  1427                           
  1428                           
  1429                           ;usart_pic16.c: 48:         SPBRG=64;
  1430  0153  3000               	movlw	0
  1431  0154  0023               	movlb	3	; select bank3
  1432  0155  009C               	movwf	28	;volatile
  1433  0156  3040               	movlw	64
  1434  0157  2961               	goto	L3
  1435  0158                     l129:	
  1436                           ;usart_pic16.c: 50:      case 28800:
  1437                           
  1438                           ;usart_pic16.c: 49:         break;
  1439                           
  1440                           
  1441                           ;usart_pic16.c: 51:         SPBRG=42;
  1442  0158  3000               	movlw	0
  1443  0159  0023               	movlb	3	; select bank3
  1444  015A  009C               	movwf	28	;volatile
  1445  015B  302A               	movlw	42
  1446  015C  2961               	goto	L3
  1447  015D                     l130:	
  1448                           ;usart_pic16.c: 53:      case 33600:
  1449                           
  1450                           ;usart_pic16.c: 52:         break;
  1451                           
  1452                           
  1453                           ;usart_pic16.c: 54:         SPBRG=36;
  1454  015D  3000               	movlw	0
  1455  015E  0023               	movlb	3	; select bank3
  1456  015F  009C               	movwf	28	;volatile
  1457  0160  3024               	movlw	36
  1458  0161                     L3:	
  1459  0161  009B               	movwf	27	;volatile
  1460                           
  1461                           ;usart_pic16.c: 55:         break;
  1462  0162  2985               	goto	l127
  1463  0163                     l1087:	
  1464                           
  1465                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 4 sub-sw
      +                          itches
  1466                           ; Switch size 1, requested type "simple"
  1467                           ; Number of cases is 4, Range of values is 37 to 131
  1468                           ; switch strategies available:
  1469                           ; Name         Instructions Cycles
  1470                           ; simple_byte           13     7 (average)
  1471                           ; direct_byte          199     9 (fixed)
  1472                           ; jumptable            263     9 (fixed)
  1473                           ;	Chosen strategy is simple_byte
  1474  0163  0873               	movf	USARTInit@baud_rate+1,w
  1475  0164  3A25               	xorlw	37	; case 37
  1476  0165  1903               	skipnz
  1477  0166  2971               	goto	l1559
  1478  0167  3A6E               	xorlw	110	; case 75
  1479  0168  1903               	skipnz
  1480  0169  2976               	goto	l1561
  1481  016A  3A3B               	xorlw	59	; case 112
  1482  016B  1903               	skipnz
  1483  016C  297B               	goto	l1563
  1484  016D  3AF3               	xorlw	243	; case 131
  1485  016E  1903               	skipnz
  1486  016F  2980               	goto	l1565
  1487  0170  2985               	goto	l127
  1488  0171                     l1559:	
  1489                           
  1490                           ; Switch size 1, requested type "simple"
  1491                           ; Number of cases is 1, Range of values is 128 to 128
  1492                           ; switch strategies available:
  1493                           ; Name         Instructions Cycles
  1494                           ; simple_byte            4     3 (average)
  1495                           ; direct_byte           11     9 (fixed)
  1496                           ; jumptable            263     9 (fixed)
  1497                           ;	Chosen strategy is simple_byte
  1498  0171  0872               	movf	USARTInit@baud_rate,w
  1499  0172  3A80               	xorlw	128	; case 128
  1500  0173  1903               	skipnz
  1501  0174  294E               	goto	l126
  1502  0175  2985               	goto	l127
  1503  0176                     l1561:	
  1504                           
  1505                           ; Switch size 1, requested type "simple"
  1506                           ; Number of cases is 1, Range of values is 0 to 0
  1507                           ; switch strategies available:
  1508                           ; Name         Instructions Cycles
  1509                           ; simple_byte            4     3 (average)
  1510                           ; direct_byte            8     6 (fixed)
  1511                           ; jumptable            260     6 (fixed)
  1512                           ;	Chosen strategy is simple_byte
  1513  0176  0872               	movf	USARTInit@baud_rate,w
  1514  0177  3A00               	xorlw	0	; case 0
  1515  0178  1903               	skipnz
  1516  0179  2953               	goto	l128
  1517  017A  2985               	goto	l127
  1518  017B                     l1563:	
  1519                           
  1520                           ; Switch size 1, requested type "simple"
  1521                           ; Number of cases is 1, Range of values is 128 to 128
  1522                           ; switch strategies available:
  1523                           ; Name         Instructions Cycles
  1524                           ; simple_byte            4     3 (average)
  1525                           ; direct_byte           11     9 (fixed)
  1526                           ; jumptable            263     9 (fixed)
  1527                           ;	Chosen strategy is simple_byte
  1528  017B  0872               	movf	USARTInit@baud_rate,w
  1529  017C  3A80               	xorlw	128	; case 128
  1530  017D  1903               	skipnz
  1531  017E  2958               	goto	l129
  1532  017F  2985               	goto	l127
  1533  0180                     l1565:	
  1534                           
  1535                           ; Switch size 1, requested type "simple"
  1536                           ; Number of cases is 1, Range of values is 64 to 64
  1537                           ; switch strategies available:
  1538                           ; Name         Instructions Cycles
  1539                           ; simple_byte            4     3 (average)
  1540                           ; direct_byte           11     9 (fixed)
  1541                           ; jumptable            263     9 (fixed)
  1542                           ;	Chosen strategy is simple_byte
  1543  0180  0872               	movf	USARTInit@baud_rate,w
  1544  0181  3A40               	xorlw	64	; case 64
  1545  0182  1903               	skipnz
  1546  0183  295D               	goto	l130
  1547  0184  2985               	goto	l127
  1548  0185                     l127:	
  1549                           
  1550                           ;usart_pic16.c: 58:     TXSTAbits.TX9=0;
  1551  0185  0023               	movlb	3	; select bank3
  1552  0186  131E               	bcf	30,6	;volatile
  1553                           
  1554                           ;usart_pic16.c: 59:     TXSTAbits.TXEN=1;
  1555  0187  169E               	bsf	30,5	;volatile
  1556                           
  1557                           ;usart_pic16.c: 60:     TXSTAbits.SYNC=0;
  1558  0188  121E               	bcf	30,4	;volatile
  1559                           
  1560                           ;usart_pic16.c: 61:     TXSTAbits.BRGH=0;
  1561  0189  111E               	bcf	30,2	;volatile
  1562                           
  1563                           ;usart_pic16.c: 63:     BAUDCONbits.BRG16 = 0;
  1564  018A  119F               	bcf	31,3	;volatile
  1565                           
  1566                           ;usart_pic16.c: 66:     RCSTAbits.SPEN=1;
  1567  018B  179D               	bsf	29,7	;volatile
  1568                           
  1569                           ;usart_pic16.c: 67:     RCSTAbits.RX9=0;
  1570  018C  131D               	bcf	29,6	;volatile
  1571                           
  1572                           ;usart_pic16.c: 68:     RCSTAbits.CREN=1;
  1573  018D  161D               	bsf	29,4	;volatile
  1574                           
  1575                           ;usart_pic16.c: 69:     RCSTAbits.ADDEN=0;
  1576  018E  119D               	bcf	29,3	;volatile
  1577                           
  1578                           ;usart_pic16.c: 73:     PIE1bits.RCIE=1;
  1579  018F  0021               	movlb	1	; select bank1
  1580  0190  1691               	bsf	17,5	;volatile
  1581  0191  0008               	return
  1582  0192                     __end_of_USARTInit:	
  1583                           
  1584                           	psect	intentry
  1585  0004                     __pintentry:	
  1586 ;; *************** function _int0 *****************
  1587 ;; Defined at:
  1588 ;;		line 71 in file "main.c"
  1589 ;; Parameters:    Size  Location     Type
  1590 ;;		None
  1591 ;; Auto vars:     Size  Location     Type
  1592 ;;		None
  1593 ;; Return value:  Size  Location     Type
  1594 ;;                  1    wreg      void 
  1595 ;; Registers used:
  1596 ;;		wreg
  1597 ;; Tracked objects:
  1598 ;;		On entry : 0/0
  1599 ;;		On exit  : 0/0
  1600 ;;		Unchanged: 0/0
  1601 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1602 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1603 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1604 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1605 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1606 ;;Total ram usage:        2 bytes
  1607 ;; Hardware stack levels used:    1
  1608 ;; This function calls:
  1609 ;;		Nothing
  1610 ;; This function is called by:
  1611 ;;		Interrupt level 1
  1612 ;; This function uses a non-reentrant model
  1613 ;;
  1614                           
  1615  0004                     _int0:	
  1616                           
  1617                           ;incstack = 0
  1618  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  1619                           
  1620                           ; Regs used in _int0: [wreg]
  1621  0005  3180               	pagesel	$
  1622                           
  1623                           ;main.c: 73:     if(INTCONbits.INTF == 1 ){
  1624  0006  1C8B               	btfss	11,1	;volatile
  1625  0007  280E               	goto	i1l1189
  1626                           
  1627                           ;main.c: 74:         clk_low = 1;
  1628  0008  3001               	movlw	1
  1629  0009  0020               	movlb	0	; select bank0
  1630  000A  00A9               	movwf	_clk_low
  1631  000B  3000               	movlw	0
  1632  000C  00AA               	movwf	_clk_low+1
  1633                           
  1634                           ;main.c: 75:         INTCONbits.INTF = 0;
  1635  000D  108B               	bcf	11,1	;volatile
  1636  000E                     i1l1189:	
  1637                           
  1638                           ;main.c: 78:     if(RCIF == 1){
  1639  000E  0020               	movlb	0	; select bank0
  1640  000F  1E91               	btfss	17,5	;volatile
  1641  0010  281E               	goto	i1l41
  1642                           
  1643                           ;main.c: 79:         rx_ser = RCREG;
  1644  0011  0023               	movlb	3	; select bank3
  1645  0012  0819               	movf	25,w	;volatile
  1646  0013  00F0               	movwf	??_int0
  1647  0014  01F1               	clrf	??_int0+1
  1648  0015  0870               	movf	??_int0,w
  1649  0016  0020               	movlb	0	; select bank0
  1650  0017  00A7               	movwf	_rx_ser
  1651  0018  0871               	movf	??_int0+1,w
  1652  0019  00A8               	movwf	_rx_ser+1
  1653                           
  1654                           ;main.c: 80:         new_rx = 1;
  1655  001A  3001               	movlw	1
  1656  001B  00A5               	movwf	_new_rx
  1657  001C  3000               	movlw	0
  1658  001D  00A6               	movwf	_new_rx+1
  1659  001E                     i1l41:	
  1660  001E  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  1661  001F  0009               	retfie
  1662  0020                     __end_of_int0:	
  1663  007E                     btemp	set	126	;btemp
  1664  007E                     int$flags	set	126
  1665  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         77
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      12
    BANK0            80      8      19
    BANK1            80      0      64
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_send_data
    _config->_USARTInit

Critical Paths under _int0 in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_send_data

Critical Paths under _int0 in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _int0 in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _int0 in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _int0 in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _int0 in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _int0 in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _int0 in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _int0 in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _int0 in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _int0 in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _int0 in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _int0 in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _int0 in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0     843
                                              6 BANK0      2     2      0
                             _config
                          _send_data
 ---------------------------------------------------------------------------------
 (1) _send_data                                           14    10      4     745
                                              2 COMMON     8     4      4
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (1) _config                                               2     2      0      98
                                              5 COMMON     2     2      0
                          _USARTInit
 ---------------------------------------------------------------------------------
 (2) _USARTInit                                            3     1      2      98
                                              2 COMMON     3     1      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _int0                                                 2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _config
     _USARTInit
   _send_data

 _int0 (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      A       C       2       85.7%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      8      13       5       23.8%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      0      40       7       80.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      5F      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      5F      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Sat Oct 19 13:45:42 2019

            __CFG_CP$OFF 0000                       l32 0124       USARTInit@baud_rate 0072  
            __CFG_LVP$ON 0000                      l130 015D                      l126 014E  
                    l127 0185                      l128 0153                      l129 0158  
                    u240 010D                      u245 0109                      u265 0137  
           __CFG_CPD$OFF 0000                      u627 006C                      u637 0084  
                    u647 009C                      u657 00AC                      u667 00C4  
                    u677 00E8                      u687 01B4             __CFG_BORV$LO 0000  
                    wreg 0009                     l1121 00F0                     l1131 0126  
                   l1133 0129                     l1127 00FD                     l1087 0163  
                   l1561 0176                     l1473 00CB                     l1465 00A3  
                   l1563 017B                     l1565 0180                     l1559 0171  
                   _LATA 010C                     _LATC 010E                     i1l41 001E  
                   _RCIF 008D             __CFG_WRT$OFF 0000                     _int0 0004  
                   _main 0037                     fsr0h 0005                     indf0 0000  
                   fsr0l 0004                     btemp 007E                     start 0020  
          __CFG_IESO$OFF 0000            __CFG_MCLRE$ON 0000                    ?_int0 0070  
                  ?_main 0070            __CFG_WDTE$OFF 0000                    _RCREG 0199  
                  _SPBRG 019B                    _PORTA 000C                    _PORTC 000E  
                  _TRISA 008C                    _TRISC 008E                    _TXREG 019A  
                  _UQEnd 007A           __CFG_FCMEN$OFF 0000           __CFG_BOREN$OFF 0000  
     __size_of_USARTInit 0050                    status 0003                    wtemp0 007E  
        __initialization 0022             __end_of_int0 0020             __end_of_main 00E0  
                 ??_int0 0070                   ??_main 0031           __CFG_PLLEN$OFF 0000  
                 _ANSELA 018C                   _ANSELC 018E                   i1l1189 000E  
                 _URBuff 00A0           __CFG_PWRTE$OFF 0000                   _config 0192  
                 _new_rx 0025        __end_of_USARTInit 0192                   _rx_ser 0027  
__end_of__initialization 0033           __pcstackCOMMON 0070           _OPTION_REGbits 0095  
             __pbssBANK0 0020               __pbssBANK1 00A0               __pmaintext 0037  
             __pintentry 0004                  ?_config 0070       __size_of_send_data 0062  
     USARTWriteInt@F2384 0020                  _UQFront 007B          __size_of_config 0032  
        __CFG_STVREN$OFF 0000                  _clk_low 0029                  __ptext1 00E0  
                __ptext2 0192                  __ptext3 0142                  clrloop0 01C5  
   end_of_initialization 0033        __end_of_send_data 0142                _RCSTAbits 019D  
          send_data@data 0072            send_data@temp 002B                _PORTCbits 000E  
       __CFG_FOSC$INTOSC 0000                _USARTInit 0142                _TRISAbits 008C  
              _TRISCbits 008E                _TXSTAbits 019E              _BAUDCONbits 019F  
         __end_of_config 01C4      start_initialization 0022               ?_USARTInit 0072  
            _APFCON0bits 011D                 ??_config 0075              __pbssCOMMON 007A  
              ___latbits 0002            __pcstackBANK0 002B               send_data@i 002F  
            ??_USARTInit 0074                 _LATCbits 010E                clear_ram0 01C4  
               _PIE1bits 0091                _send_data 00E0                 _PIR1bits 0011  
               _WPUAbits 020C               ?_send_data 0072            __size_of_int0 001C  
          __size_of_main 00A9                 int$flags 007E               _INTCONbits 000B  
               intlevel1 0000        __CFG_CLKOUTEN$OFF 0000              ??_send_data 0076  
             _OSCCONbits 0099  



Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Sun May 05 01:24:46 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	18F46K22
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1
    12                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    13                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    14                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    15                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    16  0000                     
    17                           ; Version 2.05
    18                           ; Generated 20/12/2018 GMT
    19                           ; 
    20                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    21                           ; All rights reserved.
    22                           ; 
    23                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    24                           ; 
    25                           ; Redistribution and use in source and binary forms, with or without modification, are
    26                           ; permitted provided that the following conditions are met:
    27                           ; 
    28                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    29                           ;        conditions and the following disclaimer.
    30                           ; 
    31                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    32                           ;        of conditions and the following disclaimer in the documentation and/or other
    33                           ;        materials provided with the distribution.
    34                           ; 
    35                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    36                           ;        software without specific prior written permission.
    37                           ; 
    38                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    39                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    40                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    41                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    42                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    43                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    44                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    45                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    46                           ; 
    47                           ; 
    48                           ; Code-generator required, PIC18F46K22 Definitions
    49                           ; 
    50                           ; SFR Addresses
    51  0000                     
    52                           	psect	smallconst
    53  001000                     __psmallconst:
    54                           	opt callstack 0
    55  001000  00                 	db	0
    56  001001                     _anim_cmd:
    57                           	opt callstack 0
    58  001001  0085               	dw	133
    59  001003  0000               	dw	0
    60  001005                     __end_of_anim_cmd:
    61                           	opt callstack 0
    62  001005                     _led_cmd:
    63                           	opt callstack 0
    64  001005  0084               	dw	132
    65  001007  0000               	dw	0
    66  001009                     __end_of_led_cmd:
    67                           	opt callstack 0
    68  001009                     _sync_cmd:
    69                           	opt callstack 0
    70  001009  0004               	dw	4
    71  00100B  0000               	dw	0
    72  00100D                     __end_of_sync_cmd:
    73                           	opt callstack 0
    74  0000                     _ANSELE	set	3900
    75  0000                     _ANSELD	set	3899
    76  0000                     _ANSELC	set	3898
    77  0000                     _ANSELB	set	3897
    78  0000                     _ANSELA	set	3896
    79  0000                     _TRISBbits	set	3987
    80  0000                     _WPUBbits	set	3937
    81  0000                     _INTCON2bits	set	4081
    82  0000                     _LATE	set	3981
    83  0000                     _LATD	set	3980
    84  0000                     _LATC	set	3979
    85  0000                     _LATB	set	3978
    86  0000                     _LATA	set	3977
    87  0000                     _PORTE	set	3972
    88  0000                     _PORTD	set	3971
    89  0000                     _PORTC	set	3970
    90  0000                     _PORTB	set	3969
    91  0000                     _PORTA	set	3968
    92  0000                     _TRISE	set	3990
    93  0000                     _TRISD	set	3989
    94  0000                     _TRISC	set	3988
    95  0000                     _TRISB	set	3987
    96  0000                     _TRISA	set	3986
    97  0000                     _INTCONbits	set	4082
    98  0000                     _OSCTUNEbits	set	3995
    99  0000                     _OSCCONbits	set	4051
   100  0000                     _LATBbits	set	3978
   101                           
   102                           ; #config settings
   103  00100D  00                 	db	0	; dummy byte at the end
   104  0000                     
   105                           	psect	cinit
   106  00119A                     __pcinit:
   107                           	opt callstack 0
   108  00119A                     start_initialization:
   109                           	opt callstack 0
   110  00119A                     __initialization:
   111                           	opt callstack 0
   112                           
   113                           ; Clear objects allocated to COMRAM (2 bytes)
   114  00119A  6A13               	clrf	(__pbssCOMRAM+1)& (0+255),c
   115  00119C  6A12               	clrf	__pbssCOMRAM& (0+255),c
   116  00119E                     end_of_initialization:
   117                           	opt callstack 0
   118  00119E                     __end_of__initialization:
   119                           	opt callstack 0
   120  00119E  9014               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   121  0011A0  9214               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   122  0011A2  0E00               	movlw	low (__Lsmallconst shr (0+16))
   123  0011A4  6EF8               	movwf	tblptru,c
   124  0011A6  0E10               	movlw	high __Lsmallconst
   125  0011A8  6EF7               	movwf	tblptrh,c
   126  0011AA  0100               	movlb	0
   127  0011AC  EFAA  F008         	goto	_main	;jump to C main() function
   128                           
   129                           	psect	bssCOMRAM
   130  000012                     __pbssCOMRAM:
   131                           	opt callstack 0
   132  000012                     _clk_low:
   133                           	opt callstack 0
   134  000012                     	ds	2
   135                           
   136                           	psect	cstackCOMRAM
   137  000001                     __pcstackCOMRAM:
   138                           	opt callstack 0
   139  000001                     ??_config:
   140  000001                     send_data@data:
   141                           	opt callstack 0
   142                           
   143                           ; 4 bytes @ 0x0
   144  000001                     	ds	4
   145  000005                     ??_send_data:
   146                           
   147                           ; 1 bytes @ 0x4
   148  000005                     	ds	5
   149  00000A                     send_data@temp:
   150                           	opt callstack 0
   151                           
   152                           ; 4 bytes @ 0x9
   153  00000A                     	ds	4
   154  00000E                     send_data@i:
   155                           	opt callstack 0
   156                           
   157                           ; 2 bytes @ 0xD
   158  00000E                     	ds	2
   159  000010                     ??_main:
   160                           
   161                           ; 1 bytes @ 0xF
   162  000010                     	ds	2
   163                           
   164 ;;
   165 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   166 ;;
   167 ;; *************** function _main *****************
   168 ;; Defined at:
   169 ;;		line 74 in file "main.c"
   170 ;; Parameters:    Size  Location     Type
   171 ;;		None
   172 ;; Auto vars:     Size  Location     Type
   173 ;;		None
   174 ;; Return value:  Size  Location     Type
   175 ;;                  1    wreg      void 
   176 ;; Registers used:
   177 ;;		wreg, status,2, status,0, cstack
   178 ;; Tracked objects:
   179 ;;		On entry : 0/0
   180 ;;		On exit  : 0/0
   181 ;;		Unchanged: 0/0
   182 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   183 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   184 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   185 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   186 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   187 ;;Total ram usage:        2 bytes
   188 ;; Hardware stack levels required when called:    2
   189 ;; This function calls:
   190 ;;		_config
   191 ;;		_send_data
   192 ;; This function is called by:
   193 ;;		Startup code after reset
   194 ;; This function uses a non-reentrant model
   195 ;;
   196                           
   197                           	psect	text0
   198  001154                     __ptext0:
   199                           	opt callstack 0
   200  001154                     _main:
   201                           	opt callstack 29
   202                           
   203                           ;main.c: 76:     config();
   204                           
   205                           ;incstack = 0
   206  001154  EC67  F008         	call	_config	;wreg free
   207                           
   208                           ;main.c: 77:     send_data(0x084);
   209  001158  0E84               	movlw	132
   210  00115A  6E01               	movwf	send_data@data,c
   211  00115C  0E00               	movlw	0
   212  00115E  6E02               	movwf	send_data@data+1,c
   213  001160  0E00               	movlw	0
   214  001162  6E03               	movwf	send_data@data+2,c
   215  001164  0E00               	movlw	0
   216  001166  6E04               	movwf	send_data@data+3,c
   217  001168  EC07  F008         	call	_send_data	;wreg free
   218                           
   219                           ;main.c: 78:     _delay((unsigned long)((1000)*(16000000/4000.0)));
   220  00116C  0E15               	movlw	21
   221  00116E  6E11               	movwf	(??_main+1)& (0+255),c
   222  001170  0E4B               	movlw	75
   223  001172  6E10               	movwf	??_main& (0+255),c
   224  001174  0EBE               	movlw	190
   225  001176                     u117:
   226  001176  2EE8               	decfsz	wreg,f,c
   227  001178  D7FE               	bra	u117
   228  00117A  2E10               	decfsz	??_main& (0+255),f,c
   229  00117C  D7FC               	bra	u117
   230  00117E  2E11               	decfsz	(??_main+1)& (0+255),f,c
   231  001180  D7FA               	bra	u117
   232  001182  D000               	nop2	
   233                           
   234                           ;main.c: 79:     send_data(0x085);
   235  001184  0E85               	movlw	133
   236  001186  6E01               	movwf	send_data@data,c
   237  001188  0E00               	movlw	0
   238  00118A  6E02               	movwf	send_data@data+1,c
   239  00118C  0E00               	movlw	0
   240  00118E  6E03               	movwf	send_data@data+2,c
   241  001190  0E00               	movlw	0
   242  001192  6E04               	movwf	send_data@data+3,c
   243  001194  EC07  F008         	call	_send_data	;wreg free
   244  001198                     l97:
   245                           
   246                           ;main.c: 83:     {}
   247  001198  D7FF               	goto	l97
   248  00119A                     __end_of_main:
   249                           	opt callstack 0
   250                           
   251 ;; *************** function _send_data *****************
   252 ;; Defined at:
   253 ;;		line 27 in file "main.c"
   254 ;; Parameters:    Size  Location     Type
   255 ;;  data            4    0[COMRAM] long 
   256 ;; Auto vars:     Size  Location     Type
   257 ;;  temp            4    9[COMRAM] long 
   258 ;;  i               2   13[COMRAM] int 
   259 ;; Return value:  Size  Location     Type
   260 ;;                  1    wreg      void 
   261 ;; Registers used:
   262 ;;		wreg, status,2, status,0
   263 ;; Tracked objects:
   264 ;;		On entry : 0/0
   265 ;;		On exit  : 0/0
   266 ;;		Unchanged: 0/0
   267 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   268 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   269 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   270 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   271 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   272 ;;Total ram usage:       15 bytes
   273 ;; Hardware stack levels used:    1
   274 ;; Hardware stack levels required when called:    1
   275 ;; This function calls:
   276 ;;		Nothing
   277 ;; This function is called by:
   278 ;;		_main
   279 ;; This function uses a non-reentrant model
   280 ;;
   281                           
   282                           	psect	text1
   283  00100E                     __ptext1:
   284                           	opt callstack 0
   285  00100E                     _send_data:
   286                           	opt callstack 29
   287                           
   288                           ;main.c: 30:     long int temp = 0;
   289                           
   290                           ;incstack = 0
   291  00100E  0E00               	movlw	0
   292  001010  6E0A               	movwf	send_data@temp,c
   293  001012  0E00               	movlw	0
   294  001014  6E0B               	movwf	send_data@temp+1,c
   295  001016  0E00               	movlw	0
   296  001018  6E0C               	movwf	send_data@temp+2,c
   297  00101A  0E00               	movlw	0
   298  00101C  6E0D               	movwf	send_data@temp+3,c
   299                           
   300                           ;main.c: 31:     INTCONbits.GIE = 1;
   301  00101E  8EF2               	bsf	4082,7,c	;volatile
   302                           
   303                           ;main.c: 32:     LATBbits.LATB1 = 0;
   304  001020  928A               	bcf	3978,1,c	;volatile
   305                           
   306                           ;main.c: 34:     _delay((unsigned long)((2)*(16000000/4000.0)));
   307  001022  0E0B               	movlw	11
   308  001024  6E05               	movwf	??_send_data& (0+255),c
   309  001026  0E62               	movlw	98
   310  001028                     u127:
   311  001028  2EE8               	decfsz	wreg,f,c
   312  00102A  D7FE               	bra	u127
   313  00102C  2E05               	decfsz	??_send_data& (0+255),f,c
   314  00102E  D7FC               	bra	u127
   315  001030  D000               	nop2	
   316                           
   317                           ;main.c: 36:     for(i=0;i<11;i++)
   318  001032  0E00               	movlw	0
   319  001034  6E0F               	movwf	send_data@i+1,c
   320  001036  0E00               	movlw	0
   321  001038  6E0E               	movwf	send_data@i,c
   322  00103A                     l858:
   323  00103A  5012               	movf	_clk_low,w,c
   324  00103C  1013               	iorwf	_clk_low+1,w,c
   325  00103E  B4D8               	btfsc	status,2,c
   326  001040  D7FC               	goto	l858
   327                           
   328                           ;main.c: 40:         if(i == 10)
   329  001042  0E0A               	movlw	10
   330  001044  180E               	xorwf	send_data@i,w,c
   331  001046  100F               	iorwf	send_data@i+1,w,c
   332  001048  A4D8               	btfss	status,2,c
   333  00104A  D002               	goto	l864
   334                           
   335                           ;main.c: 41:         {;main.c: 42:             LATBbits.LATB1 = 1;
   336  00104C  828A               	bsf	3978,1,c	;volatile
   337                           
   338                           ;main.c: 43:         }
   339  00104E  D02E               	goto	l870
   340  001050                     l864:
   341                           
   342                           ;main.c: 45:             temp = (data >> (9-i)) & 0x01;
   343  001050  500E               	movf	send_data@i,w,c
   344  001052  0809               	sublw	9
   345  001054  6E05               	movwf	??_send_data& (0+255),c
   346  001056  C001  F006         	movff	send_data@data,??_send_data+1
   347  00105A  C002  F007         	movff	send_data@data+1,??_send_data+2
   348  00105E  C003  F008         	movff	send_data@data+2,??_send_data+3
   349  001062  C004  F009         	movff	send_data@data+3,??_send_data+4
   350  001066                     u85:
   351  001066  6605               	tstfsz	??_send_data,c
   352  001068  D001               	goto	u86
   353  00106A  D007               	goto	u87
   354  00106C                     u86:
   355  00106C  3409               	rlcf	??_send_data+4,w,c
   356  00106E  3209               	rrcf	??_send_data+4,f,c
   357  001070  3208               	rrcf	??_send_data+3,f,c
   358  001072  3207               	rrcf	??_send_data+2,f,c
   359  001074  3206               	rrcf	??_send_data+1,f,c
   360  001076  2E05               	decfsz	??_send_data,f,c
   361  001078  D7F6               	goto	u85
   362  00107A                     u87:
   363  00107A  0E01               	movlw	1
   364  00107C  1406               	andwf	??_send_data+1,w,c
   365  00107E  6E0A               	movwf	send_data@temp,c
   366  001080  0E00               	movlw	0
   367  001082  1407               	andwf	??_send_data+2,w,c
   368  001084  6E0B               	movwf	send_data@temp+1,c
   369  001086  0E00               	movlw	0
   370  001088  1408               	andwf	??_send_data+3,w,c
   371  00108A  6E0C               	movwf	send_data@temp+2,c
   372  00108C  0E00               	movlw	0
   373  00108E  1409               	andwf	??_send_data+4,w,c
   374  001090  6E0D               	movwf	send_data@temp+3,c
   375                           
   376                           ;main.c: 46:             if(temp == 1)
   377  001092  040A               	decf	send_data@temp,w,c
   378  001094  100B               	iorwf	send_data@temp+1,w,c
   379  001096  100C               	iorwf	send_data@temp+2,w,c
   380  001098  100D               	iorwf	send_data@temp+3,w,c
   381  00109A  A4D8               	btfss	status,2,c
   382  00109C  D002               	goto	l85
   383                           
   384                           ;main.c: 47:             {;main.c: 48:                 LATBbits.LATB1 = 1;
   385  00109E  828A               	bsf	3978,1,c	;volatile
   386                           
   387                           ;main.c: 49:             }
   388  0010A0  D001               	goto	l868
   389  0010A2                     l85:
   390                           
   391                           ;main.c: 51:                 LATBbits.LATB1 = 0;
   392  0010A2  928A               	bcf	3978,1,c	;volatile
   393  0010A4                     l868:
   394                           
   395                           ;main.c: 54:             clk_low = 0;
   396  0010A4  0E00               	movlw	0
   397  0010A6  6E13               	movwf	_clk_low+1,c
   398  0010A8  0E00               	movlw	0
   399  0010AA  6E12               	movwf	_clk_low,c
   400  0010AC                     l870:
   401                           
   402                           ;main.c: 57:     }
   403  0010AC  4A0E               	infsnz	send_data@i,f,c
   404  0010AE  2A0F               	incf	send_data@i+1,f,c
   405  0010B0  BE0F               	btfsc	send_data@i+1,7,c
   406  0010B2  D7C3               	goto	l858
   407  0010B4  500F               	movf	send_data@i+1,w,c
   408  0010B6  E104               	bnz	u100
   409  0010B8  0E0B               	movlw	11
   410  0010BA  5C0E               	subwf	send_data@i,w,c
   411  0010BC  A0D8               	btfss	status,0,c
   412  0010BE  D7BD               	goto	l858
   413  0010C0                     u100:
   414                           
   415                           ;main.c: 59:     clk_low = 0;
   416  0010C0  0E00               	movlw	0
   417  0010C2  6E13               	movwf	_clk_low+1,c
   418  0010C4  0E00               	movlw	0
   419  0010C6  6E12               	movwf	_clk_low,c
   420                           
   421                           ;main.c: 60:     INTCONbits.GIE = 0;
   422  0010C8  9EF2               	bcf	4082,7,c	;volatile
   423                           
   424                           ;main.c: 61:     LATBbits.LATB1 = 1;
   425  0010CA  828A               	bsf	3978,1,c	;volatile
   426  0010CC  0012               	return		;funcret
   427  0010CE                     __end_of_send_data:
   428                           	opt callstack 0
   429                           
   430 ;; *************** function _config *****************
   431 ;; Defined at:
   432 ;;		line 15 in file "config.c"
   433 ;; Parameters:    Size  Location     Type
   434 ;;		None
   435 ;; Auto vars:     Size  Location     Type
   436 ;;		None
   437 ;; Return value:  Size  Location     Type
   438 ;;                  1    wreg      void 
   439 ;; Registers used:
   440 ;;		wreg, status,2
   441 ;; Tracked objects:
   442 ;;		On entry : 0/0
   443 ;;		On exit  : 0/0
   444 ;;		Unchanged: 0/0
   445 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   446 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   447 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   448 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   449 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   450 ;;Total ram usage:        2 bytes
   451 ;; Hardware stack levels used:    1
   452 ;; Hardware stack levels required when called:    1
   453 ;; This function calls:
   454 ;;		Nothing
   455 ;; This function is called by:
   456 ;;		_main
   457 ;; This function uses a non-reentrant model
   458 ;;
   459                           
   460                           	psect	text2
   461  0010CE                     __ptext2:
   462                           	opt callstack 0
   463  0010CE                     _config:
   464                           	opt callstack 29
   465                           
   466                           ;config.c: 18:     LATBbits.LATB1=1;
   467                           
   468                           ;incstack = 0
   469  0010CE  828A               	bsf	3978,1,c	;volatile
   470                           
   471                           ;config.c: 20:     OSCCONbits.IRCF0=1;
   472  0010D0  88D3               	bsf	4051,4,c	;volatile
   473                           
   474                           ;config.c: 21:     OSCCONbits.IRCF1=1;
   475  0010D2  8AD3               	bsf	4051,5,c	;volatile
   476                           
   477                           ;config.c: 22:     OSCCONbits.IRCF2=1;
   478  0010D4  8CD3               	bsf	4051,6,c	;volatile
   479                           
   480                           ;config.c: 23:     OSCTUNEbits.PLLEN = 0;
   481  0010D6  9C9B               	bcf	3995,6,c	;volatile
   482                           
   483                           ;config.c: 24:     INTCONbits.GIE=0;
   484  0010D8  9EF2               	bcf	4082,7,c	;volatile
   485                           
   486                           ;config.c: 26:     ANSELA=0X00;
   487  0010DA  0E00               	movlw	0
   488  0010DC  010F               	movlb	15	; () banked
   489  0010DE  6F38               	movwf	56,b	;volatile
   490                           
   491                           ;config.c: 27:     ANSELB=0X00;
   492  0010E0  0E00               	movlw	0
   493  0010E2  6F39               	movwf	57,b	;volatile
   494                           
   495                           ;config.c: 28:     ANSELC=0X00;
   496  0010E4  0E00               	movlw	0
   497  0010E6  6F3A               	movwf	58,b	;volatile
   498                           
   499                           ;config.c: 29:     ANSELD=0X00;
   500  0010E8  0E00               	movlw	0
   501  0010EA  6F3B               	movwf	59,b	;volatile
   502                           
   503                           ;config.c: 30:     ANSELE=0X00;
   504  0010EC  0E00               	movlw	0
   505  0010EE  6F3C               	movwf	60,b	;volatile
   506                           
   507                           ;config.c: 31:     TRISA=0X00;
   508  0010F0  0E00               	movlw	0
   509  0010F2  6E92               	movwf	3986,c	;volatile
   510                           
   511                           ;config.c: 32:     TRISB=0X00;
   512  0010F4  0E00               	movlw	0
   513  0010F6  6E93               	movwf	3987,c	;volatile
   514                           
   515                           ;config.c: 33:     TRISC=0X00;
   516  0010F8  0E00               	movlw	0
   517  0010FA  6E94               	movwf	3988,c	;volatile
   518                           
   519                           ;config.c: 34:     TRISD=0X00;
   520  0010FC  0E00               	movlw	0
   521  0010FE  6E95               	movwf	3989,c	;volatile
   522                           
   523                           ;config.c: 35:     TRISE=0X00;
   524  001100  0E00               	movlw	0
   525  001102  6E96               	movwf	3990,c	;volatile
   526                           
   527                           ;config.c: 36:     PORTA=0X00;
   528  001104  0E00               	movlw	0
   529  001106  6E80               	movwf	3968,c	;volatile
   530                           
   531                           ;config.c: 37:     PORTB=0X00;
   532  001108  0E00               	movlw	0
   533  00110A  6E81               	movwf	3969,c	;volatile
   534                           
   535                           ;config.c: 38:     PORTC=0X00;
   536  00110C  0E00               	movlw	0
   537  00110E  6E82               	movwf	3970,c	;volatile
   538                           
   539                           ;config.c: 39:     PORTD=0X00;
   540  001110  0E00               	movlw	0
   541  001112  6E83               	movwf	3971,c	;volatile
   542                           
   543                           ;config.c: 40:     PORTE=0X00;
   544  001114  0E00               	movlw	0
   545  001116  6E84               	movwf	3972,c	;volatile
   546                           
   547                           ;config.c: 41:     LATA=0X00;
   548  001118  0E00               	movlw	0
   549  00111A  6E89               	movwf	3977,c	;volatile
   550                           
   551                           ;config.c: 42:     LATB=0b00000010;
   552  00111C  0E02               	movlw	2
   553  00111E  6E8A               	movwf	3978,c	;volatile
   554                           
   555                           ;config.c: 43:     LATC=0X00;
   556  001120  0E00               	movlw	0
   557  001122  6E8B               	movwf	3979,c	;volatile
   558                           
   559                           ;config.c: 44:     LATD=0X00;
   560  001124  0E00               	movlw	0
   561  001126  6E8C               	movwf	3980,c	;volatile
   562                           
   563                           ;config.c: 45:     LATE=0X00;
   564  001128  0E00               	movlw	0
   565  00112A  6E8D               	movwf	3981,c	;volatile
   566                           
   567                           ; BSR set to: 15
   568                           ;config.c: 47:     LATBbits.LATB1=1;
   569  00112C  828A               	bsf	3978,1,c	;volatile
   570                           
   571                           ; BSR set to: 15
   572                           ;config.c: 48:     INTCON2bits.RBPU=0;
   573  00112E  9EF1               	bcf	4081,7,c	;volatile
   574                           
   575                           ; BSR set to: 15
   576                           ;config.c: 49:     WPUBbits.WPUB1=1;
   577  001130  8261               	bsf	3937,1,c	;volatile
   578                           
   579                           ; BSR set to: 15
   580                           ;config.c: 50:     TRISBbits.RB0=1;
   581  001132  8093               	bsf	3987,0,c	;volatile
   582                           
   583                           ; BSR set to: 15
   584                           ;config.c: 51:     INTCON2bits.INTEDG0 = 1;
   585  001134  8CF1               	bsf	4081,6,c	;volatile
   586                           
   587                           ; BSR set to: 15
   588                           ;config.c: 53:     _delay((unsigned long)((1000)*(16000000/4000.0)));
   589  001136  0E15               	movlw	21
   590  001138  6E02               	movwf	(??_config+1)& (0+255),c
   591  00113A  0E4B               	movlw	75
   592  00113C  6E01               	movwf	??_config& (0+255),c
   593  00113E  0EBE               	movlw	190
   594  001140                     u137:
   595  001140  2EE8               	decfsz	wreg,f,c
   596  001142  D7FE               	bra	u137
   597  001144  2E01               	decfsz	??_config& (0+255),f,c
   598  001146  D7FC               	bra	u137
   599  001148  2E02               	decfsz	(??_config+1)& (0+255),f,c
   600  00114A  D7FA               	bra	u137
   601  00114C  D000               	nop2	
   602                           
   603                           ;config.c: 55:     INTCONbits.GIE = 0;
   604  00114E  9EF2               	bcf	4082,7,c	;volatile
   605                           
   606                           ;config.c: 56:     INTCONbits.INT0IE = 1;
   607  001150  88F2               	bsf	4082,4,c	;volatile
   608  001152  0012               	return		;funcret
   609  001154                     __end_of_config:
   610                           	opt callstack 0
   611                           
   612 ;; *************** function _int0 *****************
   613 ;; Defined at:
   614 ;;		line 66 in file "main.c"
   615 ;; Parameters:    Size  Location     Type
   616 ;;		None
   617 ;; Auto vars:     Size  Location     Type
   618 ;;		None
   619 ;; Return value:  Size  Location     Type
   620 ;;                  1    wreg      void 
   621 ;; Registers used:
   622 ;;		wreg, status,2
   623 ;; Tracked objects:
   624 ;;		On entry : 0/0
   625 ;;		On exit  : 0/0
   626 ;;		Unchanged: 0/0
   627 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   628 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   629 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   630 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   631 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   632 ;;Total ram usage:        0 bytes
   633 ;; Hardware stack levels used:    1
   634 ;; This function calls:
   635 ;;		Nothing
   636 ;; This function is called by:
   637 ;;		Interrupt level 2
   638 ;; This function uses a non-reentrant model
   639 ;;
   640                           
   641                           	psect	intcode
   642  000008                     __pintcode:
   643                           	opt callstack 0
   644  000008                     _int0:
   645                           	opt callstack 29
   646                           
   647                           ;incstack = 0
   648  000008  8214               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
   649                           
   650                           ;main.c: 68:     clk_low = 1;
   651  00000A  0E00               	movlw	0
   652  00000C  6E13               	movwf	_clk_low+1,c
   653  00000E  0E01               	movlw	1
   654  000010  6E12               	movwf	_clk_low,c
   655                           
   656                           ;main.c: 69:     INTCONbits.INT0IF=0;
   657  000012  92F2               	bcf	4082,1,c	;volatile
   658  000014  9214               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
   659  000016  0011               	retfie		f
   660  000018                     __end_of_int0:
   661                           	opt callstack 0
   662                           
   663                           	psect	rparam
   664  0000                     
   665                           	psect	temp
   666  000014                     btemp:
   667                           	opt callstack 0
   668  000014                     	ds	1
   669  0000                     int$flags	set	btemp
   670  0000                     wtemp8	set	btemp+1
   671  0000                     ttemp5	set	btemp+1
   672  0000                     ttemp6	set	btemp+4
   673  0000                     ttemp7	set	btemp+8
   674                           tosu	equ	0xFFF
   675                           tosh	equ	0xFFE
   676                           tosl	equ	0xFFD
   677                           stkptr	equ	0xFFC
   678                           pclatu	equ	0xFFB
   679                           pclath	equ	0xFFA
   680                           pcl	equ	0xFF9
   681                           tblptru	equ	0xFF8
   682                           tblptrh	equ	0xFF7
   683                           tblptrl	equ	0xFF6
   684                           tablat	equ	0xFF5
   685                           prodh	equ	0xFF4
   686                           prodl	equ	0xFF3
   687                           indf0	equ	0xFEF
   688                           postinc0	equ	0xFEE
   689                           postdec0	equ	0xFED
   690                           preinc0	equ	0xFEC
   691                           plusw0	equ	0xFEB
   692                           fsr0h	equ	0xFEA
   693                           fsr0l	equ	0xFE9
   694                           wreg	equ	0xFE8
   695                           indf1	equ	0xFE7
   696                           postinc1	equ	0xFE6
   697                           postdec1	equ	0xFE5
   698                           preinc1	equ	0xFE4
   699                           plusw1	equ	0xFE3
   700                           fsr1h	equ	0xFE2
   701                           fsr1l	equ	0xFE1
   702                           bsr	equ	0xFE0
   703                           indf2	equ	0xFDF
   704                           postinc2	equ	0xFDE
   705                           postdec2	equ	0xFDD
   706                           preinc2	equ	0xFDC
   707                           plusw2	equ	0xFDB
   708                           fsr2h	equ	0xFDA
   709                           fsr2l	equ	0xFD9
   710                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    12
    Data        0
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     17      19
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           56      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_send_data

Critical Paths under _int0 in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _int0 in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _int0 in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _int0 in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _int0 in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _int0 in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _int0 in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _int0 in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _int0 in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _int0 in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _int0 in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _int0 in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _int0 in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _int0 in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _int0 in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _int0 in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _int0 in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0     289
                                             15 COMRAM     2     2      0
                             _config
                          _send_data
 ---------------------------------------------------------------------------------
 (1) _send_data                                           15    11      4     289
                                              0 COMRAM    15    11      4
 ---------------------------------------------------------------------------------
 (1) _config                                               2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _int0                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _config
   _send_data

 _int0 (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F37      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     11      13       1       20.2%
BITBANK15           38      0       0      35        0.0%
BANK15              38      0       0      36        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      13      12        0.0%
DATA                 0      0      13       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Sun May 05 01:24:46 2019

                     l85 10A2                       l97 1198                       u85 1066  
                     u86 106C                       u87 107A             __CFG_CP0$OFF 000000  
           __CFG_CP1$OFF 000000             __CFG_CP2$OFF 000000             __CFG_CP3$OFF 000000  
            __CFG_LVP$ON 000000                      l870 10AC                      l864 1050  
                    l858 103A                      l868 10A4             __CFG_CPB$OFF 000000  
                    u100 10C0                      u117 1176                      u127 1028  
                    u137 1140             __CFG_CPD$OFF 000000                      wreg 000FE8  
                   _LATA 000F89                     _LATB 000F8A                     _LATC 000F8B  
                   _LATD 000F8C                     _LATE 000F8D                     _int0 0008  
                   _main 1154                     btemp 0014            __CFG_BORV$190 000000  
                   start 0018            __CFG_IESO$OFF 000000             ___param_bank 000000  
                  ?_int0 0001                    ?_main 0001                    _PORTA 000F80  
                  _PORTB 000F81                    _PORTC 000F82                    _PORTD 000F83  
                  _PORTE 000F84                    _TRISA 000F92                    _TRISB 000F93  
                  _TRISC 000F94                    _TRISD 000F95                    _TRISE 000F96  
          __CFG_WRT0$OFF 000000            __CFG_WRT1$OFF 000000            __CFG_WRT2$OFF 000000  
          __CFG_WRT3$OFF 000000           __CFG_EBTR0$OFF 000000           __CFG_FCMEN$OFF 000000  
         __CFG_EBTR1$OFF 000000           __CFG_EBTR2$OFF 000000           __CFG_EBTR3$OFF 000000  
        __end_of_led_cmd 1009            __CFG_WRTB$OFF 000000            __CFG_WRTC$OFF 000000  
          __CFG_WRTD$OFF 000000           __CFG_EBTRB$OFF 000000       __CFG_MCLRE$EXTMCLR 000000  
         __CFG_BOREN$OFF 000000                    ttemp5 0015                    ttemp6 0018  
                  ttemp7 001C                    status 000FD8                    wtemp8 0015  
         __CFG_HFOFST$ON 000000          __initialization 119A             __end_of_int0 0018  
           __end_of_main 119A                   ??_int0 0001                   ??_main 0010  
          __activetblptr 000001                   _ANSELA 000F38                   _ANSELB 000F39  
                 _ANSELC 000F3A                   _ANSELD 000F3B                   _ANSELE 000F3C  
         __CFG_WDTEN$OFF 000000         __end_of_anim_cmd 1005           __CFG_XINST$OFF 000000  
                 _config 10CE             __mediumconst 0000                   tblptrh 000FF7  
                 tblptru 000FF8         __end_of_sync_cmd 100D               __accesstop 0060  
__end_of__initialization 119E          __CFG_PBADEN$OFF 000000            ___rparam_used 000001  
         __pcstackCOMRAM 0001          __CFG_PLLCFG$OFF 000000       __CFG_CCP2MX$PORTC1 000000  
     __CFG_CCP3MX$PORTB5 000000                  ?_config 0001       __size_of_send_data 00C0  
        __CFG_PWRTEN$OFF 000000                  __Hparam 0000                  __Lparam 0000  
           __psmallconst 1000          __size_of_config 0086          __CFG_STVREN$OFF 000000  
                __pcinit 119A                  __ramtop 1000                  _clk_low 0012  
                __ptext0 1154                  __ptext1 100E                  __ptext2 10CE  
                _led_cmd 1005     end_of_initialization 119E        __end_of_send_data 10CE  
          send_data@data 0001            send_data@temp 000A                _TRISBbits 000F93  
         __end_of_config 1154      start_initialization 119A                 ??_config 0001  
            __pbssCOMRAM 0012                __pintcode 0008         __CFG_PRICLKEN$ON 000000  
             send_data@i 000E              __smallconst 1000                 _LATBbits 000F8A  
              _send_data 100E         __CFG_WDTPS$32768 000000                 _WPUBbits 000F61  
            _INTCON2bits 000FF1               ?_send_data 0001                 __Hrparam 0000  
               __Lrparam 0000             __Lsmallconst 1000        __CFG_P2BMX$PORTD2 000000  
               _anim_cmd 1001            __size_of_int0 0010            __size_of_main 0046  
               int$flags 0014                 _sync_cmd 1009              _OSCTUNEbits 000F9B  
             _INTCONbits 000FF2                 intlevel2 0000              ??_send_data 0005  
             _OSCCONbits 000FD3        __CFG_T3CMX$PORTC0 000000        __CFG_FOSC$INTIO67 000000  
